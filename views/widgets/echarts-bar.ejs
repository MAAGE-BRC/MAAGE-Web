<%
  const chartId = 'barChart-' + Math.random().toString(36).substr(2, 9);
%>
<div class="w-full h-full flex flex-col p-4 rounded-sm shadow-md">
  <h2 class="text-lg font-semibold mb-3 text-gray-700">Genomic Features by Type</h2>
  <div class="flex-1">
    <div id="<%= chartId %>" class="w-full h-full min-h-64"></div>
  </div>
</div>

<script>
(function() {
  function initChart() {
    const chartDom = document.getElementById('<%= chartId %>');
    
    if (!chartDom) {
      console.error('Chart DOM element not found');
      return;
    }
    
    if (typeof echarts === 'undefined') {
      console.error('ECharts library not loaded');
      return;
    }
    
    // Wait for element to be visible
    setTimeout(function() {
      const myChart = echarts.init(chartDom, 'maage');
      
      const option = {
        title: {
          text: 'Genomic Feature Distribution',
          left: 'center',
          textStyle: {
            fontSize: 14,
            fontWeight: 'normal'
          }
        },
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: 'shadow'
          },
          formatter: function(params) {
            return params[0].name + '<br/>' + 
                   params[0].seriesName + ': ' + params[0].value.toLocaleString();
          }
        },
        grid: {
          left: '3%',
          right: '4%',
          bottom: '3%',
          containLabel: true
        },
        xAxis: {
          type: 'category',
          data: ['CDS', 'tRNA', 'rRNA', 'Pseudogene', 'ncRNA', 'tmRNA', 'Repeat'],
          axisLabel: {
            rotate: 45,
            fontSize: 11
          }
        },
        yAxis: {
          type: 'value',
          axisLabel: {
            formatter: function(value) {
              if (value >= 1000) {
                return (value / 1000).toFixed(1) + 'k';
              }
              return value;
            }
          }
        },
        series: [{
          name: 'Feature Count',
          type: 'bar',
          data: [4892, 87, 22, 156, 43, 1, 78],
          emphasis: {
            itemStyle: {
              shadowBlur: 10,
              shadowOffsetX: 0,
              shadowColor: 'rgba(0, 0, 0, 0.5)'
            }
          }
        }]
      };
      
      myChart.setOption(option);
      
      // Handle resize
      if (typeof ResizeObserver !== 'undefined') {
        const resizeObserver = new ResizeObserver(function() {
          myChart.resize();
        });
        resizeObserver.observe(chartDom);
      }
    }, 100);
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initChart);
  } else {
    initChart();
  }
})();
</script>