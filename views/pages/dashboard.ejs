<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Dashboard | Midwest Alliance for Applied Epidemiology</title>
        <%- include('../head') %>

    </head>
    <body class="claro patric <% if (request.isAuthenticated && request.isAuthenticated()) { %>Authenticated<% } %>"></body>
		<div id="ApplicationContainer" data-dojo-type="dijit/layout/BorderContainer" class="layoutContainer" data-dojo-props="id:'ApplicationContainer',gutters:false,liveSplitters:false">
			<%- include('../navbar') %>
            <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region:'center'" style="padding:0px;border:0px solid #ddd;background:inherit;">







<!-- Generated by bubble-wrapper v0.1.0 -->
<style>
    /* Basic Reset */

    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 {
      all: revert;
      box-sizing: border-box;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      line-height: 1.5;
      color: #000;
      margin: 0;
      padding: 0;
    }

    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 *,
    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 *::before,
    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 *::after {
      box-sizing: inherit;
    }

    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 a {
      color: #0070f3;
      text-decoration: none;
    }

    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 img,
    .bw-bubble-m7z6y5q4 .bw-bubble-m7z6y5q4 svg {
      max-width: 100%;
      display: block;
    }

    .bw-bubble-m7z6y5q4 {
      --primary-color: #a6c9b8;
      --primary-50: #f2f8f5;
      --primary-100: #deede4;
      --primary-200: #bfd9cb;
      --primary-300: #a6c9b8;
      --primary-400: #89b8a3;
      --primary-500: #65a48a;
      --primary-600: #488970;
      --primary-700: #3e7561;
      --primary-800: #376755;
      --primary-900: #305a4c;
      --primary-950: #24423a;
      --secondary-color: #548fa6;
      --secondary-50: #f1f7f9;
      --secondary-100: #dceaef;
      --secondary-200: #c2d9e0;
      --secondary-300: #a0c3cf;
      --secondary-400: #71a3b7;
      --secondary-500: #548fa6;
      --secondary-600: #447188;
      --secondary-700: #406477;
      --secondary-800: #395160;
      --secondary-900: #314654;
      --secondary-950: #24333d;
      --maage-primary-50: #f2f8f5;
      --maage-primary-100: #deede4;
      --maage-primary-200: #bfd9cb;
      --maage-primary-300: #a6c9b8;
      --maage-primary-400: #89b8a3;
      --maage-primary-500: #65a48a;
      --maage-primary-600: #488970;
      --maage-primary-700: #3e7561;
      --maage-primary-800: #376755;
      --maage-primary-900: #305a4c;
      --maage-primary-950: #24423a;
      --maage-secondary-50: #f1f7f9;
      --maage-secondary-100: #dceaef;
      --maage-secondary-200: #c2d9e0;
      --maage-secondary-300: #a0c3cf;
      --maage-secondary-400: #71a3b7;
      --maage-secondary-500: #548fa6;
      --maage-secondary-600: #447188;
      --maage-secondary-700: #406477;
      --maage-secondary-800: #395160;
      --maage-secondary-900: #314654;
      --maage-secondary-950: #24333d;
      --maage-tertiary-50: #f9f9fb;
      --maage-tertiary-100: #f1f1f6;
      --maage-tertiary-200: #e6e5ef;
      --maage-tertiary-300: #d2d0e2;
      --maage-tertiary-400: #b4b0cf;
      --maage-tertiary-500: #a19ac1;
      --maage-tertiary-600: #897daa;
      --maage-tertiary-700: #766a95;
      --maage-tertiary-800: #675d83;
      --maage-tertiary-900: #574e6e;
      --maage-tertiary-950: #3b364e;
      --maage-gray-50: #f6f6f6;
      --maage-gray-100: #ededed;
      --maage-gray-200: #dbdbdb;
      --maage-gray-300: #c9c9c9;
      --maage-gray-400: #adadad;
      --maage-gray-500: #8f8f8f;
      --maage-gray-600: #757575;
      --maage-gray-700: #595959;
      --maage-gray-800: #454545;
      --maage-gray-900: #333333;
      --maage-gray-950: #262626;
      --dove-gray-50: #f6f6f6;
      --dove-gray-100: #e7e7e7;
      --dove-gray-200: #dedede;
      --dove-gray-300: #b0b0b0;
      --dove-gray-400: #888888;
      --dove-gray-500: #737373;
      --dove-gray-600: #5d5d5d;
      --dove-gray-700: #4f4f4f;
      --dove-gray-800: #454545;
      --dove-gray-900: #3d3d3d;
      --dove-gray-950: #262626;
      --accent-color: #8279a1;
      --success-color: #2ecc71;
      --warning-color: #f39c12;
      --light-color: #ecf0f1;
      --dark-color: #2c3e50;
      --text-color: #2c2c2c;
      --text-color-alt: #7f8c8d;
      --text-color-dark-mode: #ecf0f1;
      --text-color-dark-mode-alt: #bdc3c7;
      --heading-color: #2c2c2c;
      --heading-color-alt: #7f8c8d;
      --heading-color-dark-mode: #ecf0f1;
      --heading-color-dark-mode-alt: #bdc3c7;
      --text-light: #7f8c8d;
      --background-color: #F8F6F4;
      --bg-ui-color: #F8F6F4;
      --card-color: #fafafa;
      --viz-placeholder: #e7e7e7;
      --sidebar-width: 240px;
      --header-height: 60px;
      --border-radius: 8px;
      --box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      --ma-color: #477e93;
      --age-color: #375767;
      --viz-bg: #fafafa;
    }

    .bw-bubble-m7z6y5q4 [data-theme="dark"] {
      --primary-color: #3d677d;
      --secondary-color: #305a6a;
      --accent-color: #6e6b8a;
      --success-color: #27ae60;
      --warning-color: #e67e22;
      --light-color: #2c3e50;
      --dark-color: #ecf0f1;
      --text-color: #ecf0f1;
      --text-light: #bdc3c7;
      --background-color: #2e3f4b;
      --card-color: #2c3e50;
      --box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
      --ma-color: #5b9eb8;
      --age-color: #7c91a3;
    }

    .bw-bubble-m7z6y5q4 * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    .bw-bubble-m7z6y5q4 html {
      transition: color 0.5s, background-color 0.5s;
    }

    .bw-bubble-m7z6y5q4 body,
    .bw-bubble-m7z6y5q4 .card-color,
    .bw-bubble-m7z6y5q4 .navbar,
    .bw-bubble-m7z6y5q4 .sidebar,
    .bw-bubble-m7z6y5q4 .stat-card,
    .bw-bubble-m7z6y5q4 .outbreak-card,
    .bw-bubble-m7z6y5q4 .disease-stat-card,
    .bw-bubble-m7z6y5q4 .disease-chart-wrapper,
    .bw-bubble-m7z6y5q4 .prediction-chart-card,
    .bw-bubble-m7z6y5q4 .metric-card,
    .bw-bubble-m7z6y5q4 .dataset-card {
      transition: background-color 0.5s, color 0.5s, border-color 0.5s, box-shadow 0.5s;
    }

    .bw-bubble-m7z6y5q4 .stat-card:hover,
    .bw-bubble-m7z6y5q4 .outbreak-card:hover,
    .bw-bubble-m7z6y5q4 .dataset-card:hover {
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      transform: translateY(-5px);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 body {
      font-family: 'Inter', sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
      line-height: 1.6;
    }

    .bw-bubble-m7z6y5q4 h1,
    .bw-bubble-m7z6y5q4 h2,
    .bw-bubble-m7z6y5q4 h3,
    .bw-bubble-m7z6y5q4 h4,
    .bw-bubble-m7z6y5q4 h5,
    .bw-bubble-m7z6y5q4 h6 {
      font-family: 'Poppins', sans-serif !important;
    }

    .bw-bubble-m7z6y5q4 p,
    .bw-bubble-m7z6y5q4 a {
      font-family: 'Inter', sans-serif !important;
    }

    /* Dashboard Layout */

    .bw-bubble-m7z6y5q4 .dashboard {
      min-height: 100vh;
    }

    /* Navbar */

    .bw-bubble-m7z6y5q4 .navbar {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: var(--header-height);
      background: var(--primary-color);
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.08);
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 20px;
      z-index: 20;
      transition: all 0.3s ease;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(5px);
    }

    .bw-bubble-m7z6y5q4 .navbar-left {
      display: flex;
      align-items: center;
    }

    .bw-bubble-m7z6y5q4 .logo img {
      min-width: 32px;
      height: auto;
      transition: all 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .nav-items {
      display: flex;
      gap: 20px;
      margin-left: 15px;
    }

    .bw-bubble-m7z6y5q4 .nav-item {
      position: relative;
      padding: 0 6px;
    }

    .bw-bubble-m7z6y5q4 .mobile-menu-toggle {
      display: none;
      background: none;
      border: none;
      color: var(--secondary-800);
      font-size: 24px;
      cursor: pointer;
      padding: 5px;
      transition: transform 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .mobile-menu-toggle:hover {
      transform: scale(1.1);
    }

    .bw-bubble-m7z6y5q4 .nav-item>a {
      color: var(--secondary-800);
      font-family: 'Poppins', sans-serif;
      font-size: 16px;
      font-weight: 500;
      padding: 8px 0;
      display: block;
      text-decoration: none;
      transition: all 0.3s ease;
      position: relative;
    }

    .bw-bubble-m7z6y5q4 .nav-item>a:hover {
      color: var(--secondary-900);
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .bw-bubble-m7z6y5q4 .nav-item>a:after {
      content: '';
      position: absolute;
      width: 0;
      height: 2px;
      bottom: 0;
      left: 0;
      background-color: var(--secondary-700);
      transition: width 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .nav-item>a:hover:after {
      width: 100%;
    }

    .bw-bubble-m7z6y5q4 .dropdown-content {
      position: absolute;
      top: 100%;
      left: 0;
      background-color: white;
      min-width: 200px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      border-radius: 4px;
      padding: 10px;
      display: none;
      z-index: 30;
    }

    .bw-bubble-m7z6y5q4 .dropdown-content.two-columns {
      display: none;
      flex-direction: row !important;
      /* Force row layout */
      min-width: 600px;
      left: -150px;
      width: auto;
    }

    .bw-bubble-m7z6y5q4 .dropdown-column {
      flex: 1;
      padding: 0 10px;
      display: flex;
      flex-direction: column;
      width: 50%;
      /* Ensure each column takes up half the width */
      box-sizing: border-box;
    }

    .bw-bubble-m7z6y5q4 .nav-item .dropdown-content.two-columns.show {
      display: flex !important;
      /* Force flex display when visible */
    }

    .bw-bubble-m7z6y5q4 .nav-item .dropdown-content.show {
      display: flex;
      flex-direction: column;
    }

    .bw-bubble-m7z6y5q4 .nav-item>a {
      display: flex;
      align-items: center;
    }

    .bw-bubble-m7z6y5q4 .nav-item>a .dropdown-icon {
      margin-left: 5px;
      transition: transform 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .nav-item.active>a .dropdown-icon {
      transform: rotate(180deg);
    }

    .bw-bubble-m7z6y5q4 .dropdown-section {
      margin-bottom: 10px;
    }

    .bw-bubble-m7z6y5q4 .dropdown-section h3 {
      font-size: 14px;
      color: var(--secondary-color);
      margin-bottom: 5px;
      padding-bottom: 5px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .bw-bubble-m7z6y5q4 .dropdown-section a {
      display: block;
      padding: 5px 0;
      color: var(--text-color);
      font-size: 14px;
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .dropdown-section a:hover {
      color: var(--secondary-color);
    }

    .bw-bubble-m7z6y5q4 .navbar-right {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .bw-bubble-m7z6y5q4 .search-icon,
    .bw-bubble-m7z6y5q4 .dark-mode-toggle {
      background: none;
      border: none;
      cursor: pointer;
      font-size: 18px;
      color: var(--dark-color);
      margin-right: 10px;
      transition: transform 0.2s ease;
    }

    .bw-bubble-m7z6y5q4 .search-icon:hover {
      transform: scale(1.1);
    }

    .bw-bubble-m7z6y5q4 .search-flyout {
      background-color: #fafafa;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      position: fixed;
      top: var(--header-height);
      left: 0;
      right: 0;
      z-index: 100;
      padding: 20px 0;
      display: none;
      transform: translateY(-10px);
      opacity: 0;
      pointer-events: none;
    }

    .bw-bubble-m7z6y5q4 .search-flyout.active {
      display: block;
      transform: translateY(0);
      opacity: 1;
      pointer-events: auto;
    }

    .bw-bubble-m7z6y5q4 .search-container {
      max-width: 800px;
      margin: 0 auto;
      position: relative;
      padding: 0 20px;
    }

    .bw-bubble-m7z6y5q4 .search-container i.fa-search {
      position: absolute;
      left: 35px;
      top: 50%;
      transform: translateY(-50%);
      color: var(--text-light);
      font-size: 18px;
    }

    .bw-bubble-m7z6y5q4 .search-container input {
      color: var(--text-color);
      background-color: #fafafa;
      border: 1px solid var(--light-color);
      border-radius: var(--border-radius);
      padding: 12px 15px 12px 45px;
      font-size: 16px;
      width: 100%;
      box-sizing: border-box;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .bw-bubble-m7z6y5q4 .search-container .search-close {
      position: absolute;
      right: 35px;
      top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      color: var(--text-light);
      cursor: pointer;
      font-size: 18px;
    }

    .bw-bubble-m7z6y5q4 .search-container .search-close:hover {
      color: var(--text-color);
    }

    .bw-bubble-m7z6y5q4 .search-container input:focus {
      outline: none;
      border-color: var(--secondary-color);
      box-shadow: 0 0 0 2px rgba(61, 103, 125, 0.2);
    }

    .bw-bubble-m7z6y5q4 .search-message {
      position: fixed;
      top: 80px;
      left: 50%;
      transform: translateX(-50%) translateY(-20px);
      background-color: var(--card-color);
      color: var(--text-color);
      padding: 12px 24px;
      border-radius: var(--border-radius);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      z-index: 110;
      opacity: 0;
      transition: all 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .search-message.show {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }

    .bw-bubble-m7z6y5q4 .sidebar-dark-mode-toggle {
      background: none;
      border: none;
      cursor: pointer;
      color: #fff;
      font-size: 18px;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      padding: 12px 0;
      margin-top: auto;
      transition: all 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .sidebar-dark-mode-toggle:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }

    .bw-bubble-m7z6y5q4 [data-theme="dark"] .sidebar-dark-mode-toggle i.fa-moon {
      color: #f1c40f;
    }

    .bw-bubble-m7z6y5q4 [data-theme="dark"] .fa-moon:before {
      content: "\f185";
      /* Change to sun icon when in dark mode */
    }

    .bw-bubble-m7z6y5q4 .login-btn,
    .bw-bubble-m7z6y5q4 .register-btn {
      text-decoration: none;
      padding: 8px 32px;
      border-radius: 6px;
      font-family: 'Poppins', sans-serif;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.3s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      position: relative;
      overflow: hidden;
    }

    .bw-bubble-m7z6y5q4 .login-btn::before,
    .bw-bubble-m7z6y5q4 .register-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.7s ease;
    }

    .bw-bubble-m7z6y5q4 .login-btn:hover::before,
    .bw-bubble-m7z6y5q4 .register-btn:hover::before {
      left: 100%;
    }

    .bw-bubble-m7z6y5q4 .login-btn {
      background-color: var(--bg-ui-color);
      color: #262626;
      border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .bw-bubble-m7z6y5q4 .login-btn:hover {
      color: #fafafa;
      background-color: #477e93;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .bw-bubble-m7z6y5q4 .register-btn {
      color: #fafafa;
      background-color: var(--secondary-color);
    }

    .bw-bubble-m7z6y5q4 .register-btn:hover {
      background-color: #477e93;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    /* Sidebar */

    .bw-bubble-m7z6y5q4 .sidebar {
      width: 64px;
      background-color: var(--secondary-color);
      color: #fff;
      display: flex;
      flex-direction: column;
      position: fixed;
      top: 50%;
      left: 20px;
      transform: translateY(-50%);
      height: auto;
      max-height: 80vh;
      z-index: 10;
      border-radius: 12px;
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    }

    .bw-bubble-m7z6y5q4 .logo {
      display: flex;
      align-items: center;
      padding: 10px 0;
      margin-right: 20px;
      transition: transform 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .logo:hover {
      transform: scale(1.05);
    }

    .bw-bubble-m7z6y5q4 .logo i {
      font-size: 24px;
      margin-right: 10px;
      color: var(--secondary-color);
      filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.1));
    }

    .bw-bubble-m7z6y5q4 .logo h1 {
      font-size: 20px;
      font-weight: 600;
      color: var(--dark-color);
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.08);
    }

    .bw-bubble-m7z6y5q4 .sidebar-header {
      padding: 20px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .bw-bubble-m7z6y5q4 .menu {
      flex: 1;
      padding: 20px 0;
      overflow-y: auto;
      max-height: 60vh;
    }

    .bw-bubble-m7z6y5q4 .menu-item {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 14px 0;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .bw-bubble-m7z6y5q4 .menu-item:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }

    .bw-bubble-m7z6y5q4 .menu-item.active {
      background-color: rgba(255, 255, 255, 0.2);
      border-left: 3px solid var(--secondary-color);
    }

    .bw-bubble-m7z6y5q4 .menu-item i {
      font-size: 20px;
      width: 24px;
      text-align: center;
    }

    .bw-bubble-m7z6y5q4 .menu-item span {
      display: none;
    }

    .bw-bubble-m7z6y5q4 .menu-bottom {
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      margin-top: auto;
      width: 100%;
      display: flex;
      justify-content: center;
    }

    /* Content Area */

    .bw-bubble-m7z6y5q4 .content {
      margin-left: 84px;
      /* 64px sidebar width + 20px padding */
      margin-top: var(--header-height);
      padding: 20px;
    }

    .bw-bubble-m7z6y5q4 .platform-header {
      padding-top: 5px;
      padding-bottom: 5px;
    }

    .bw-bubble-m7z6y5q4 .platform-header h1 {
      font-family: 'Poppins', sans-serif;
      font-weight: 600;
      color: var(--secondary-700);
    }

    .bw-bubble-m7z6y5q4 .search-bar {
      display: flex;
      align-items: center;
      background-color: var(--background-color);
      border-radius: 20px;
      padding: 8px 15px;
      width: 300px;
    }

    .bw-bubble-m7z6y5q4 .search-bar i {
      color: var(--text-light);
      margin-right: 10px;
    }

    .bw-bubble-m7z6y5q4 .search-bar input {
      border: none;
      background: transparent;
      outline: none;
      color: var(--text-color);
      width: 100%;
      font-size: 14px;
    }

    .bw-bubble-m7z6y5q4 .header-actions {
      display: flex;
      align-items: center;
    }

    .bw-bubble-m7z6y5q4 .btn-notifications {
      background: none;
      border: none;
      color: var(--text-light);
      font-size: 18px;
      cursor: pointer;
      margin-right: 20px;
      position: relative;
    }

    .bw-bubble-m7z6y5q4 .btn-notifications::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 8px;
      height: 8px;
      background-color: var(--accent-color);
      border-radius: 50%;
    }

    .bw-bubble-m7z6y5q4 .user-profile {
      display: flex;
      align-items: center;
      cursor: pointer;
    }

    .bw-bubble-m7z6y5q4 .user-profile img {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      margin-right: 10px;
    }

    /* The following comes from Tailwind */

    .bw-bubble-m7z6y5q4 .container {
      width: 100%;
    }

    @media (min-width: 640px) {
      .bw-bubble-m7z6y5q4 .container {
        max-width: 640px;
      }
    }

    @media (min-width: 768px) {
      .bw-bubble-m7z6y5q4 .container {
        max-width: 768px;
      }
    }

    @media (min-width: 1024px) {
      .bw-bubble-m7z6y5q4 .container {
        max-width: 1024px;
      }
    }

    @media (min-width: 1280px) {
      .bw-bubble-m7z6y5q4 .container {
        max-width: 1280px;
      }
    }

    @media (min-width: 1536px) {
      .bw-bubble-m7z6y5q4 .container {
        max-width: 1536px;
      }
    }

    .bw-bubble-m7z6y5q4 .mx-auto {
      margin-left: auto;
      margin-right: auto;
    }

    .bw-bubble-m7z6y5q4 .px-4 {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .bw-bubble-m7z6y5q4 .py-12 {
      padding-top: 3rem;
      padding-bottom: 3rem;
    }

    .bw-bubble-m7z6y5q4 .mb-4 {
      margin-bottom: 1rem;
    }

    .bw-bubble-m7z6y5q4 .mt-6 {
      margin-top: 1.5rem;
    }

    .bw-bubble-m7z6y5q4 .mb-3 {
      margin-bottom: 0.75rem;
    }

    .bw-bubble-m7z6y5q4 .text-md {
      font-size: 0.9375rem;
    }

    .bw-bubble-m7z6y5q4 .text-lg {
      font-size: 1.125rem;
    }

    .bw-bubble-m7z6y5q4 .font-medium {
      font-weight: 500;
    }

    .bw-bubble-m7z6y5q4 .font-semibold {
      font-weight: 600;
    }

    .bw-bubble-m7z6y5q4 .text-gray-400 {
      color: #9ca3af;
    }

    .bw-bubble-m7z6y5q4 .text-gray-300 {
      color: #d1d5db;
    }

    .bw-bubble-m7z6y5q4 .text-gray-600 {
      color: #4b5563;
    }

    .bw-bubble-m7z6y5q4 .space-x-4 > * + * {
      margin-left: 1rem;
    }

    .bw-bubble-m7z6y5q4 .flex {
      display: flex;
    }

    .bw-bubble-m7z6y5q4 .inline-flex {
      display: inline-flex;
    }

    .bw-bubble-m7z6y5q4 .items-center {
      align-items: center;
    }

    .bw-bubble-m7z6y5q4 .grid {
      display: grid;
    }

    .bw-bubble-m7z6y5q4 .gap-8 {
      gap: 2rem;
    }

    .bw-bubble-m7z6y5q4 .gap-2 {
      gap: 0.5rem;
    }

    .bw-bubble-m7z6y5q4 .space-y-2 > * + * {
      margin-top: 0.5rem;
    }

    .bw-bubble-m7z6y5q4 .text-sm {
      font-size: 0.875rem;
    }

    .bw-bubble-m7z6y5q4 .text-3xl {
      font-size: 1.875rem;
    }

    .bw-bubble-m7z6y5q4 .inline {
      display: inline;
    }

    .bw-bubble-m7z6y5q4 .text-xl {
      font-size: 1.25rem;
    }

    .bw-bubble-m7z6y5q4 .h-14 {
      height: 3.5rem;
    }

    .bw-bubble-m7z6y5q4 .transition {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }

    .bw-bubble-m7z6y5q4 .hover\:text-white:hover {
      color: #fff;
    }

    .bw-bubble-m7z6y5q4 .hover\:scale-110:hover {
      transform: scale(1.1);
    }

    .bw-bubble-m7z6y5q4 .border-t {
      border-top-width: 1px;
    }

    .bw-bubble-m7z6y5q4 .border-gray-700 {
      border-color: #374151;
    }

    .bw-bubble-m7z6y5q4 .pt-8 {
      padding-top: 2rem;
    }

    .bw-bubble-m7z6y5q4 .mt-10 {
      margin-top: 2.5rem;
    }

    .bw-bubble-m7z6y5q4 .justify-between {
      justify-content: space-between;
    }

    .bw-bubble-m7z6y5q4 .text-white {
      color: #fff;
    }

    .bw-bubble-m7z6y5q4 .pb-2 {
      padding-bottom: 0.5rem;
    }

    .bw-bubble-m7z6y5q4 .mt-1 {
      margin-top: 0.25rem;
    }

    .bw-bubble-m7z6y5q4 .col-span-1 {
      grid-column: span 1 / span 1;
    }

    .bw-bubble-m7z6y5q4 .col-span-2 {
      grid-column: span 2 / span 2;
    }

    .bw-bubble-m7z6y5q4 .mb-6 {
      margin-bottom: 1.5rem;
    }

    .bw-bubble-m7z6y5q4 .hidden {
      display: none;
    }
    </style>

    <div class="bw-bubble-m7z6y5q4-container" style="all: initial; box-sizing: border-box; contain: content;">
      <div class="dashboard bw-bubble-m7z6y5q4" data-bw-bubble-m7z6y5q4="">
        <!-- Header included here -->
        ${include:header.html}

        <!-- Sidebar -->
        <div class="sidebar" data-bw-bubble-m7z6y5q4="">
          <div class="menu" data-bw-bubble-m7z6y5q4="">
            <div class="menu-item active" data-section="overview" data-bw-bubble-m7z6y5q4="">
              <i class="fas fa-globe" data-bw-bubble-m7z6y5q4=""></i>
              <span data-bw-bubble-m7z6y5q4="">Overview</span>
            </div>
            <div class="menu-item" data-section="diseases" data-bw-bubble-m7z6y5q4="">
              <i class="fas fa-bacteria" data-bw-bubble-m7z6y5q4=""></i>
              <span data-bw-bubble-m7z6y5q4="">Outbreaks</span>
            </div>
            <div class="menu-item" data-section="genomics" data-bw-bubble-m7z6y5q4="">
              <i class="fas fa-dna" data-bw-bubble-m7z6y5q4=""></i>
              <span data-bw-bubble-m7z6y5q4="">Surveillance</span>
            </div>
            <div class="menu-item" data-section="predictions" data-bw-bubble-m7z6y5q4="">
              <i class="fas fa-chart-line" data-bw-bubble-m7z6y5q4=""></i>
              <span data-bw-bubble-m7z6y5q4="">Predictions</span>
            </div>
            <div class="menu-item" data-section="datasets" data-bw-bubble-m7z6y5q4="">
              <i class="fas fa-database" data-bw-bubble-m7z6y5q4=""></i>
              <span data-bw-bubble-m7z6y5q4="">Datasets</span>
            </div>
          </div>

          <div class="menu-bottom" data-bw-bubble-m7z6y5q4="">
            <button id="dark-mode-toggle" class="sidebar-dark-mode-toggle" data-bw-bubble-m7z6y5q4="">
              <i class="fas fa-moon" data-bw-bubble-m7z6y5q4=""></i>
            </button>
          </div>
        </div>

        <!-- Main content -->
        <div class="content" data-bw-bubble-m7z6y5q4="">
          <div class="platform-header" data-bw-bubble-m7z6y5q4="">
            <h1 class="text-3xl inline" data-bw-bubble-m7z6y5q4="">Outbreak Sentinal<span class="text-sm font-medium text-gray-600" data-bw-bubble-m7z6y5q4=""> by MAAGE</span></h1>
            <span data-bw-bubble-m7z6y5q4="">
              <button id="disclaimer-toggle" class="disclaimer-toggle text-[var(--secondary-600)]" title="View disclaimer" data-bw-bubble-m7z6y5q4=""><i class="fas fa-info-circle" data-bw-bubble-m7z6y5q4=""></i></button>
              <br data-bw-bubble-m7z6y5q4="">
              <div id="disclaimer-container" class="disclaimer-container hidden" data-bw-bubble-m7z6y5q4="">
                <p class="pb-2" data-bw-bubble-m7z6y5q4="">The Outbreak Sentinal monitoring application provides intelligent real-time surveillance data for infectious disease outbreaks around the world</p>
                <p class="section-disclaimer" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4="">- Information seen on these pages should not be trusted or used in the real world. The MAAGE Outbreak Sentinal belongs to the BRCBot™ initiative and is completely fictious... for now.</span><span style="font-style: normal; font-size: 18px;" data-bw-bubble-m7z6y5q4="">😏</span>
                  <br data-bw-bubble-m7z6y5q4="">
                  <br data-bw-bubble-m7z6y5q4="">
                  - Also, on the lookout soon for the Contagion Cartographer™, the Bacterial Bodyguard™, the Microbial Maestro™, the Pathogen Prognosticator™, the Viral Vanguard™, the Genomic Gardener™ and the Bard of Bioinformatics™ for more BRCBot™ shenanigans.
                </p>
              </div>
            </span>
          </div>

          <!-- Overview Section -->
          <section id="overview" class="section active" data-bw-bubble-m7z6y5q4="">
            <h2 class="text-xl font-semibold" data-bw-bubble-m7z6y5q4="">Surveillance Monitor</h2>
            <div class="map-container" data-bw-bubble-m7z6y5q4="">
              <div class="global-stats-container" data-bw-bubble-m7z6y5q4="">
                <h3 class="global-stats-title" data-bw-bubble-m7z6y5q4="">World Health Report</h3>
                <div class="global-stats-grid" data-bw-bubble-m7z6y5q4="">
                  <div class="global-stat-panel" data-bw-bubble-m7z6y5q4="">
                    <div class="global-stat-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Overview</h4>
                    </div>
                    <div class="global-stat-content" data-bw-bubble-m7z6y5q4="">
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Active Outbreaks</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">6</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Countries Affected</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">181</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Sequences Analyzed</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">219,847</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Hospitalization Rate</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">14.3%</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">ICU Utilization</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">54.3%</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Economic Impact</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">$2.7 Trillion</span>
                      </div>
                    </div>
                  </div>
                  <div class="global-stat-panel" data-bw-bubble-m7z6y5q4="">
                    <div class="global-stat-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">New Cases</h4>
                    </div>
                    <div class="global-stat-content" data-bw-bubble-m7z6y5q4="">
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Last 24 hours</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">4,217</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Week</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">28,645</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Month</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">118,392</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">YTD</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">1,247,382</span>
                      </div>
                      <hr class="mt-2 mb-2" data-bw-bubble-m7z6y5q4="">
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Deaths This Year</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">214,392</span>
                      </div>
                    </div>
                  </div>
                  <div class="global-stat-panel" data-bw-bubble-m7z6y5q4="">
                    <div class="global-stat-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Vaccination Status</h4>
                    </div>
                    <div class="global-stat-content" data-bw-bubble-m7z6y5q4="">
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Global Vaccination Rate</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">73.8%</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Low-Income Countries</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">38.5%</span>
                      </div>
                      <div class="global-stat-item" data-bw-bubble-m7z6y5q4="">
                        <span class="global-stat-label" data-bw-bubble-m7z6y5q4="">Doses Administered</span>
                        <span class="global-stat-value" data-bw-bubble-m7z6y5q4="">14.3B</span>
                      </div>
                    </div>
                  </div>
                  <div class="global-stat-panel" data-bw-bubble-m7z6y5q4="">
                    <div class="global-stat-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Latest Alerts</h4>
                    </div>
                    <div class="global-stat-alerts" data-bw-bubble-m7z6y5q4="">
                      <div class="global-alert-item" data-bw-bubble-m7z6y5q4="">
                        <span class="alert-badge high" data-bw-bubble-m7z6y5q4="">High</span>
                        <span class="alert-text" data-bw-bubble-m7z6y5q4="">H5N1 spread to new mammalian hosts detected</span>
                      </div>
                      <div class="global-alert-item" data-bw-bubble-m7z6y5q4="">
                        <span class="alert-badge moderate" data-bw-bubble-m7z6y5q4="">Moderate</span>
                        <span class="alert-text" data-bw-bubble-m7z6y5q4="">Dengue expanding in previously unaffected regions</span>
                      </div>
                      <div class="global-alert-item" data-bw-bubble-m7z6y5q4="">
                        <span class="alert-badge low" data-bw-bubble-m7z6y5q4="">Low</span>
                        <span class="alert-text" data-bw-bubble-m7z6y5q4="">Measles outbreaks in under-vaccinated areas</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div class="map-unified-container" data-bw-bubble-m7z6y5q4="">
                <div class="map-unified-header" data-bw-bubble-m7z6y5q4="">
                  <h3 class="map-section-title" data-bw-bubble-m7z6y5q4="">Global Distribution Map</h3>
                </div>

                <div class="map-controls" data-bw-bubble-m7z6y5q4="">
                  <div class="map-diseases-selector" data-bw-bubble-m7z6y5q4="">
                    <div class="disease-selection-title" data-bw-bubble-m7z6y5q4="">Pathogens:</div>
                    <div id="map-disease-checkboxes" class="disease-checkboxes" data-bw-bubble-m7z6y5q4=""></div>
                  </div>
                </div>

                <div class="map-visualization-container" data-bw-bubble-m7z6y5q4="">
                  <div id="world-map" data-bw-bubble-m7z6y5q4=""></div>
                </div>
              </div>

              <div class="outbreak-summary-container" data-bw-bubble-m7z6y5q4="">
                <h3 class="outbreak-section-title" data-bw-bubble-m7z6y5q4="">Active Pathogens</h3>
                <div class="outbreak-cards" data-bw-bubble-m7z6y5q4="">
                  <div class="outbreak-card" data-disease="mpox-2024" data-bw-bubble-m7z6y5q4="">
                    <div class="outbreak-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Monkeypox virus</h4>
                      <span class="severity high" data-bw-bubble-m7z6y5q4="">High Concern</span>
                    </div>
                    <div class="outbreak-stats" data-bw-bubble-m7z6y5q4="">
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Cases</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">8,743</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Fatalities</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">276</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Countries</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">43</span>
                      </div>
                    </div>
                    <button class="btn-details" data-bw-bubble-m7z6y5q4="">View Details</button>
                  </div>

                  <div class="outbreak-card" data-disease="h5n1-2024" data-bw-bubble-m7z6y5q4="">
                    <div class="outbreak-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Influenza A/H5N1</h4>
                      <span class="severity critical" data-bw-bubble-m7z6y5q4="">Critical Concern</span>
                    </div>
                    <div class="outbreak-stats" data-bw-bubble-m7z6y5q4="">
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Cases</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">4,219</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Fatalities</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">381</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Countries</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">27</span>
                      </div>
                    </div>
                    <button class="btn-details" data-bw-bubble-m7z6y5q4="">View Details</button>
                  </div>

                  <div class="outbreak-card" data-disease="sarscov2" data-bw-bubble-m7z6y5q4="">
                    <div class="outbreak-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">SARS-CoV-2</h4>
                      <span class="severity moderate" data-bw-bubble-m7z6y5q4="">Moderate Concern</span>
                    </div>
                    <div class="outbreak-stats" data-bw-bubble-m7z6y5q4="">
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Cases</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">712.4M</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Fatalities</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">6.9M</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Countries</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">192</span>
                      </div>
                    </div>
                    <button class="btn-details" data-bw-bubble-m7z6y5q4="">View Details</button>
                  </div>

                  <div class="outbreak-card" data-disease="ebolavirus" data-bw-bubble-m7z6y5q4="">
                    <div class="outbreak-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Ebolavirus</h4>
                      <span class="severity critical" data-bw-bubble-m7z6y5q4="">Critical Concern</span>
                    </div>
                    <div class="outbreak-stats" data-bw-bubble-m7z6y5q4="">
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Cases</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">3,476</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Fatalities</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">1,872</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Countries</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">12</span>
                      </div>
                    </div>
                    <button class="btn-details" data-bw-bubble-m7z6y5q4="">View Details</button>
                  </div>

                  <div class="outbreak-card" data-disease="dengue" data-bw-bubble-m7z6y5q4="">
                    <div class="outbreak-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Dengue virus</h4>
                      <span class="severity high" data-bw-bubble-m7z6y5q4="">High Concern</span>
                    </div>
                    <div class="outbreak-stats" data-bw-bubble-m7z6y5q4="">
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Cases</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">128.8K</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Fatalities</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">1,432</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Countries</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">86</span>
                      </div>
                    </div>
                    <button class="btn-details" data-bw-bubble-m7z6y5q4="">View Details</button>
                  </div>

                  <div class="outbreak-card" data-disease="zika" data-bw-bubble-m7z6y5q4="">
                    <div class="outbreak-header" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Zika virus</h4>
                      <span class="severity moderate" data-bw-bubble-m7z6y5q4="">Moderate Concern</span>
                    </div>
                    <div class="outbreak-stats" data-bw-bubble-m7z6y5q4="">
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Cases</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">6,874</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Fatalities</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">58</span>
                      </div>
                      <div class="outbreak-stat" data-bw-bubble-m7z6y5q4="">
                        <span class="stat-label" data-bw-bubble-m7z6y5q4="">Countries</span>
                        <span class="stat-value" data-bw-bubble-m7z6y5q4="">31</span>
                      </div>
                    </div>
                    <button class="btn-details" data-bw-bubble-m7z6y5q4="">View Details</button>
                  </div>
                </div>
              </div>
            </div>
          </section>

          <!-- Diseases Section -->
          <section id="diseases" class="section" data-bw-bubble-m7z6y5q4="">
            <h2 class="text-xl font-semibold" data-bw-bubble-m7z6y5q4="">Pathogen Reports</h2>
            <p class="section-description" data-bw-bubble-m7z6y5q4="">
              Comprehensive information on selected infectious disease outbreaks
            </p>

            <div class="disease-selector" data-bw-bubble-m7z6y5q4="">
              <button class="disease-btn active" data-disease="mpox-2024" data-bw-bubble-m7z6y5q4="">
                Monkeypox virus
              </button>
              <button class="disease-btn" data-disease="h5n1-2024" data-bw-bubble-m7z6y5q4="">
                Influenza A/H5N1
              </button>
              <button class="disease-btn" data-disease="sarscov2" data-bw-bubble-m7z6y5q4="">
                SARS-CoV-2
              </button>
              <button class="disease-btn" data-disease="ebolavirus" data-bw-bubble-m7z6y5q4="">
                Ebolavirus
              </button>
              <button class="disease-btn" data-disease="dengue" data-bw-bubble-m7z6y5q4="">
                Dengue virus
              </button>
              <button class="disease-btn" data-disease="zika" data-bw-bubble-m7z6y5q4="">
                Zika virus
              </button>
            </div>
            <div class="disease-alerts mb-6" data-bw-bubble-m7z6y5q4="">
              <div id="disease-alerts" class="border-l-4 border-yellow-500 bg-yellow-50 text-yellow-700" data-bw-bubble-m7z6y5q4="">
                Select a disease to view current alerts and warnings.
              </div>
            </div>
            <div class="disease-details" id="disease-details" data-bw-bubble-m7z6y5q4="">
              <div class="disease-overview" data-bw-bubble-m7z6y5q4="">
                <div class="disease-data-container" data-bw-bubble-m7z6y5q4="">
                  <div class="disease-stats" data-bw-bubble-m7z6y5q4="">
                    <div class="disease-stat-card" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Total Cases</h4>
                      <div class="disease-stat-value" id="disease-total-cases" data-bw-bubble-m7z6y5q4="">
                        --
                      </div>
                    </div>
                    <div class="disease-stat-card" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Fatalities</h4>
                      <div class="disease-stat-value" id="disease-fatalities" data-bw-bubble-m7z6y5q4="">
                        --
                      </div>
                    </div>
                    <div class="disease-stat-card" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">Fatality Rate</h4>
                      <div class="disease-stat-value" id="disease-fatality-rate" data-bw-bubble-m7z6y5q4="">
                        --
                      </div>
                    </div>
                    <div class="disease-stat-card" data-bw-bubble-m7z6y5q4="">
                      <h4 data-bw-bubble-m7z6y5q4="">R₀ Estimate</h4>
                      <div class="disease-stat-value" id="disease-r0" data-bw-bubble-m7z6y5q4="">--</div>
                    </div>
                  </div>
                </div>

                <div class="disease-info-container mt-6" data-bw-bubble-m7z6y5q4="">
                  <h3 class="mb-3" data-bw-bubble-m7z6y5q4="">About the Disease</h3>
                  <div class="disease-info-content" data-bw-bubble-m7z6y5q4="">
                    <div class="disease-description" id="disease-description" data-bw-bubble-m7z6y5q4="">
                      Select a disease to view detailed information.
                    </div>

                    <div class="disease-metadata mt-4 grid grid-cols-2 gap-4" data-bw-bubble-m7z6y5q4="">
                      <div class="metadata-item" data-bw-bubble-m7z6y5q4="">
                        <h4 class="text-sm font-semibold text-gray-500" data-bw-bubble-m7z6y5q4="">Transmission</h4>
                        <p id="disease-transmission" class="mt-1" data-bw-bubble-m7z6y5q4="">--</p>
                      </div>
                      <div class="metadata-item" data-bw-bubble-m7z6y5q4="">
                        <h4 class="text-sm font-semibold text-gray-500" data-bw-bubble-m7z6y5q4="">Incubation Period</h4>
                        <p id="disease-incubation" class="mt-1" data-bw-bubble-m7z6y5q4="">--</p>
                      </div>
                      <div class="metadata-item" data-bw-bubble-m7z6y5q4="">
                        <h4 class="text-sm font-semibold text-gray-500" data-bw-bubble-m7z6y5q4="">Symptoms</h4>
                        <p id="disease-symptoms" class="mt-1" data-bw-bubble-m7z6y5q4="">--</p>
                      </div>
                      <div class="metadata-item" data-bw-bubble-m7z6y5q4="">
                        <h4 class="text-sm font-semibold text-gray-500" data-bw-bubble-m7z6y5q4="">Prevention</h4>
                        <p id="disease-prevention" class="mt-1" data-bw-bubble-m7z6y5q4="">--</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div class="disease-charts-container" data-bw-bubble-m7z6y5q4="">
                <div class="disease-chart-wrapper" data-bw-bubble-m7z6y5q4="">
                  <h3 data-bw-bubble-m7z6y5q4="">Cases Over Time</h3>
                  <canvas id="disease-timeline-chart" data-bw-bubble-m7z6y5q4=""></canvas>
                </div>
                <div class="disease-chart-wrapper" data-bw-bubble-m7z6y5q4="">
                  <h3 data-bw-bubble-m7z6y5q4="">Geographic Distribution</h3>
                  <canvas id="disease-geo-chart" data-bw-bubble-m7z6y5q4=""></canvas>
                </div>
              </div>
            </div>
          </section>

          <!-- Genomics Section -->
          <section id="genomics" class="section" data-bw-bubble-m7z6y5q4="">
            <h2 class="text-xl font-semibold" data-bw-bubble-m7z6y5q4="">Surveillance Data</h2>
            <p class="section-description" data-bw-bubble-m7z6y5q4="">
              Analysis of genomic sequences, mutations, and phylogenetic
              relationships
            </p>

            <div class="genomics-selector" data-bw-bubble-m7z6y5q4="">
              <button class="genomics-btn active" data-disease="mpox-2024" data-bw-bubble-m7z6y5q4="">
                Monkeypox virus
              </button>
              <button class="genomics-btn" data-disease="h5n1-2024" data-bw-bubble-m7z6y5q4="">
                Influenza A/H5N1
              </button>
              <button class="genomics-btn" data-disease="sarscov2" data-bw-bubble-m7z6y5q4="">
                SARS-CoV-2
              </button>
              <button class="genomics-btn" data-disease="ebolavirus" data-bw-bubble-m7z6y5q4="">
                Ebolavirus
              </button>
              <button class="genomics-btn" data-disease="dengue" data-bw-bubble-m7z6y5q4="">
                Dengue virus
              </button>
              <button class="genomics-btn" data-disease="zika" data-bw-bubble-m7z6y5q4="">
                Zika virus
              </button>
            </div>

            <div class="genomics-container" data-bw-bubble-m7z6y5q4="">
              <div class="variants-container" data-bw-bubble-m7z6y5q4="">
                <h3 data-bw-bubble-m7z6y5q4="">Variant Composition</h3>
                <div class="genomics-chart-container" data-bw-bubble-m7z6y5q4="">
                  <canvas id="variants-chart" data-bw-bubble-m7z6y5q4=""></canvas>
                </div>
                <div class="variants-table-container" data-bw-bubble-m7z6y5q4="">
                  <table class="variants-table" data-bw-bubble-m7z6y5q4="">
                    <thead data-bw-bubble-m7z6y5q4="">
                      <tr data-bw-bubble-m7z6y5q4="">
                        <th data-bw-bubble-m7z6y5q4="">Variant</th>
                        <th data-bw-bubble-m7z6y5q4="">Prevalence</th>
                        <th data-bw-bubble-m7z6y5q4="">R₀ Value</th>
                        <th data-bw-bubble-m7z6y5q4="">Key Mutations</th>
                      </tr>
                    </thead>
                    <tbody id="variants-table-body" data-bw-bubble-m7z6y5q4="">
                      <!-- Will be populated by JavaScript -->
                    </tbody>
                  </table>
                </div>
              </div>

              <div class="genomics-viz-container" data-bw-bubble-m7z6y5q4="">
                <h3 data-bw-bubble-m7z6y5q4="">Mutation Visualization</h3>
                <div id="mutation-viz" class="genomics-viz" data-bw-bubble-m7z6y5q4="">
                  <!-- D3.js will render a mutation visualization here -->
                  <p class="genomics-placeholder" data-bw-bubble-m7z6y5q4="">
                    Select a variant to visualize key mutations
                  </p>
                </div>
              </div>
            </div>
          </section>

          <!-- Predictions Section -->
          <section id="predictions" class="section" data-bw-bubble-m7z6y5q4="">
            <h2 class="text-xl font-semibold" data-bw-bubble-m7z6y5q4="">Predictive Analysis</h2>
            <p class="section-description" data-bw-bubble-m7z6y5q4="">
              AI-powered forecasting of disease spread patterns and hotspot
              identification
            </p>

            <div class="predictions-controls" data-bw-bubble-m7z6y5q4="">
              <div class="predictions-controls-content" data-bw-bubble-m7z6y5q4="">
                <div class="predictions-controls-section" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Select Pathogen:</h4>
                  <div class="predictions-selector" data-bw-bubble-m7z6y5q4="">
                    <button class="prediction-btn active" data-disease="mpox-2024" data-bw-bubble-m7z6y5q4="">
                      Monkeypox virus
                    </button>
                    <button class="prediction-btn" data-disease="h5n1-2024" data-bw-bubble-m7z6y5q4="">
                      Influenza A/H5N1
                    </button>
                    <button class="prediction-btn" data-disease="sarscov2" data-bw-bubble-m7z6y5q4="">
                      SARS-CoV-2
                    </button>
                    <button class="prediction-btn" data-disease="ebolavirus" data-bw-bubble-m7z6y5q4="">
                      Ebolavirus
                    </button>
                    <button class="prediction-btn" data-disease="dengue" data-bw-bubble-m7z6y5q4="">
                      Dengue virus
                    </button>
                    <button class="prediction-btn" data-disease="zika" data-bw-bubble-m7z6y5q4="">
                      Zika virus
                    </button>
                  </div>
                </div>
                <div class="predictions-controls-section" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Forecast Period:</h4>
                  <div class="predictions-timeframe" data-bw-bubble-m7z6y5q4="">
                    <button class="timeframe-btn active" data-days="7" data-bw-bubble-m7z6y5q4="">7 Days</button>
                    <button class="timeframe-btn" data-days="14" data-bw-bubble-m7z6y5q4="">14 Days</button>
                    <button class="timeframe-btn" data-days="30" data-bw-bubble-m7z6y5q4="">30 Days</button>
                  </div>
                </div>
              </div>
            </div>

            <div class="predictions-container" data-bw-bubble-m7z6y5q4="">
              <div class="prediction-map-container" data-bw-bubble-m7z6y5q4="">
                <h3 data-bw-bubble-m7z6y5q4="">Predicted Hotspots</h3>
                <div id="prediction-map" class="prediction-map" data-bw-bubble-m7z6y5q4="">
                  <!-- Map will be rendered here -->
                </div>
              </div>

              <div class="prediction-charts" data-bw-bubble-m7z6y5q4="">
                <div class="prediction-chart-card" data-bw-bubble-m7z6y5q4="">
                  <h3 data-bw-bubble-m7z6y5q4="">Projected Case Growth</h3>
                  <canvas id="projection-chart" data-bw-bubble-m7z6y5q4=""></canvas>
                </div>
                <div class="prediction-chart-card" data-bw-bubble-m7z6y5q4="">
                  <h3 data-bw-bubble-m7z6y5q4="">Transmission Risk Assessment</h3>
                  <div class="risk-matrix" id="risk-matrix" data-bw-bubble-m7z6y5q4="">
                    <!-- Risk matrix will be rendered here -->
                  </div>
                </div>
              </div>

              <div class="prediction-metrics" data-bw-bubble-m7z6y5q4="">
                <div class="metric-card" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Peak Date</h4>
                  <div class="metric-value" id="peak-date" data-bw-bubble-m7z6y5q4="">June 12, 2024</div>
                </div>
                <div class="metric-card" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Peak Cases</h4>
                  <div class="metric-value" id="peak-cases" data-bw-bubble-m7z6y5q4="">~4,320</div>
                </div>
                <div class="metric-card" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Growth Rate</h4>
                  <div class="metric-value" id="growth-rate" data-bw-bubble-m7z6y5q4="">1.42</div>
                </div>
                <div class="metric-card" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Confidence</h4>
                  <div class="metric-value" id="confidence" data-bw-bubble-m7z6y5q4="">76%</div>
                </div>
              </div>
            </div>
          </section>

          <section id="datasets" class="section" data-bw-bubble-m7z6y5q4="">
            <h2 class="text-xl font-semibold" data-bw-bubble-m7z6y5q4="">Datasets</h2>
            <p class="section-description" data-bw-bubble-m7z6y5q4="">
              Search and import additional epidemiological and genomic datasets
            </p>

            <div class="datasets-search" data-bw-bubble-m7z6y5q4="">
              <input type="text" id="dataset-search" placeholder="Search for datasets..." data-bw-bubble-m7z6y5q4="">
              <button id="search-datasets-btn" data-bw-bubble-m7z6y5q4="">
                <i class="fas fa-search" data-bw-bubble-m7z6y5q4=""></i> Search
              </button>
            </div>

            <div class="datasets-filters" data-bw-bubble-m7z6y5q4="">
              <div class="filter" data-bw-bubble-m7z6y5q4="">
                <label data-bw-bubble-m7z6y5q4="">Data Type</label>
                <select id="data-type-filter" data-bw-bubble-m7z6y5q4="">
                  <option value="all" data-bw-bubble-m7z6y5q4="">All Types</option>
                  <option value="case-data" data-bw-bubble-m7z6y5q4="">Case Data</option>
                  <option value="genomic" data-bw-bubble-m7z6y5q4="">Genomic</option>
                  <option value="clinical" data-bw-bubble-m7z6y5q4="">Clinical</option>
                  <option value="travel" data-bw-bubble-m7z6y5q4="">Travel &amp; Movement</option>
                </select>
              </div>
              <div class="filter" data-bw-bubble-m7z6y5q4="">
                <label data-bw-bubble-m7z6y5q4="">Region</label>
                <select id="region-filter" data-bw-bubble-m7z6y5q4="">
                  <option value="all" data-bw-bubble-m7z6y5q4="">All Regions</option>
                  <option value="africa" data-bw-bubble-m7z6y5q4="">Africa</option>
                  <option value="asia" data-bw-bubble-m7z6y5q4="">Asia</option>
                  <option value="europe" data-bw-bubble-m7z6y5q4="">Europe</option>
                  <option value="north-america" data-bw-bubble-m7z6y5q4="">North America</option>
                  <option value="south-america" data-bw-bubble-m7z6y5q4="">South America</option>
                  <option value="oceania" data-bw-bubble-m7z6y5q4="">Oceania</option>
                </select>
              </div>
              <div class="filter" data-bw-bubble-m7z6y5q4="">
                <label data-bw-bubble-m7z6y5q4="">Time Period</label>
                <select id="time-filter" data-bw-bubble-m7z6y5q4="">
                  <option value="all" data-bw-bubble-m7z6y5q4="">All Time</option>
                  <option value="last-week" data-bw-bubble-m7z6y5q4="">Last Week</option>
                  <option value="last-month" data-bw-bubble-m7z6y5q4="">Last Month</option>
                  <option value="last-6-months" data-bw-bubble-m7z6y5q4="">Last 6 Months</option>
                  <option value="last-year" data-bw-bubble-m7z6y5q4="">Last Year</option>
                </select>
              </div>
            </div>

            <div class="datasets-container" data-bw-bubble-m7z6y5q4="">
              <div class="dataset-card" data-bw-bubble-m7z6y5q4="">
                <div class="dataset-header" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">WHO Global Surveillance Database</h4>
                  <span class="dataset-tag official" data-bw-bubble-m7z6y5q4="">Official</span>
                </div>
                <p class="dataset-description" data-bw-bubble-m7z6y5q4="">
                  Official case counts and epidemiological data from the World
                  Health Organization.
                </p>
                <div class="dataset-meta" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-calendar" data-bw-bubble-m7z6y5q4=""></i> Updated: Daily</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-globe" data-bw-bubble-m7z6y5q4=""></i> Global</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-file" data-bw-bubble-m7z6y5q4=""></i> CSV, JSON</span>
                </div>
                <button class="btn-import" data-bw-bubble-m7z6y5q4="">Import Dataset</button>
              </div>

              <div class="dataset-card" data-bw-bubble-m7z6y5q4="">
                <div class="dataset-header" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">GISAID EpiCoV Database</h4>
                  <span class="dataset-tag genomic" data-bw-bubble-m7z6y5q4="">Genomic</span>
                </div>
                <p class="dataset-description" data-bw-bubble-m7z6y5q4="">
                  Repository of genomic sequences for SARS-CoV-2, influenza and
                  other pathogens.
                </p>
                <div class="dataset-meta" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-calendar" data-bw-bubble-m7z6y5q4=""></i> Updated: Daily</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-globe" data-bw-bubble-m7z6y5q4=""></i> Global</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-file" data-bw-bubble-m7z6y5q4=""></i> FASTA, JSON</span>
                </div>
                <button class="btn-import" data-bw-bubble-m7z6y5q4="">Import Dataset</button>
              </div>

              <div class="dataset-card" data-bw-bubble-m7z6y5q4="">
                <div class="dataset-header" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">CDC Outbreak Response Data</h4>
                  <span class="dataset-tag official" data-bw-bubble-m7z6y5q4="">Official</span>
                </div>
                <p class="dataset-description" data-bw-bubble-m7z6y5q4="">
                  US-specific outbreak data including regional spread and
                  demographic details.
                </p>
                <div class="dataset-meta" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-calendar" data-bw-bubble-m7z6y5q4=""></i> Updated: Weekly</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-map-marker-alt" data-bw-bubble-m7z6y5q4=""></i> United States</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-file" data-bw-bubble-m7z6y5q4=""></i> CSV, API</span>
                </div>
                <button class="btn-import" data-bw-bubble-m7z6y5q4="">Import Dataset</button>
              </div>

              <div class="dataset-card" data-bw-bubble-m7z6y5q4="">
                <div class="dataset-header" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">NextStrain Open Dataset</h4>
                  <span class="dataset-tag genomic" data-bw-bubble-m7z6y5q4="">Genomic</span>
                </div>
                <p class="dataset-description" data-bw-bubble-m7z6y5q4="">
                  Pathogen phylogenetic analysis and visualization data for
                  multiple diseases.
                </p>
                <div class="dataset-meta" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-calendar" data-bw-bubble-m7z6y5q4=""></i> Updated: Weekly</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-globe" data-bw-bubble-m7z6y5q4=""></i> Global</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-file" data-bw-bubble-m7z6y5q4=""></i> JSON, Newick</span>
                </div>
                <button class="btn-import" data-bw-bubble-m7z6y5q4="">Import Dataset</button>
              </div>

              <div class="dataset-card" data-bw-bubble-m7z6y5q4="">
                <div class="dataset-header" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">ECDC Surveillance Atlas</h4>
                  <span class="dataset-tag official" data-bw-bubble-m7z6y5q4="">Official</span>
                </div>
                <p class="dataset-description" data-bw-bubble-m7z6y5q4="">
                  European surveillance data on communicable diseases and
                  outbreaks.
                </p>
                <div class="dataset-meta" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-calendar" data-bw-bubble-m7z6y5q4=""></i> Updated: Weekly</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-map-marker-alt" data-bw-bubble-m7z6y5q4=""></i> Europe</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-file" data-bw-bubble-m7z6y5q4=""></i> CSV, XLSX</span>
                </div>
                <button class="btn-import" data-bw-bubble-m7z6y5q4="">Import Dataset</button>
              </div>

              <div class="dataset-card" data-bw-bubble-m7z6y5q4="">
                <div class="dataset-header" data-bw-bubble-m7z6y5q4="">
                  <h4 data-bw-bubble-m7z6y5q4="">Global.health Dataset</h4>
                  <span class="dataset-tag collaborative" data-bw-bubble-m7z6y5q4="">Collaborative</span>
                </div>
                <p class="dataset-description" data-bw-bubble-m7z6y5q4="">
                  Line-list data of anonymized case records for emerging
                  infectious diseases.
                </p>
                <div class="dataset-meta" data-bw-bubble-m7z6y5q4="">
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-calendar" data-bw-bubble-m7z6y5q4=""></i> Updated: Daily</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-globe" data-bw-bubble-m7z6y5q4=""></i> Global</span>
                  <span data-bw-bubble-m7z6y5q4=""><i class="fas fa-file" data-bw-bubble-m7z6y5q4=""></i> CSV, JSON, API</span>
                </div>
                <button class="btn-import" data-bw-bubble-m7z6y5q4="">Import Dataset</button>
              </div>
            </div>
          </section>
        </div>
      </div>

      <!-- Footer included here -->
      ${include:footer.html}

    </div>

    <script>

    // Isolated JavaScript for bw-bubble-m7z6y5q4
    (function(window, document) {
      // Create namespace
      window.BubbleBwbubblem7z6y5q4 = window.BubbleBwbubblem7z6y5q4 || {};

      // Define isolated query selector helpers
      const $ = (selector) => document.querySelector(".bw-bubble-m7z6y5q4 " + selector);
      const $$ = (selector) => document.querySelectorAll(".bw-bubble-m7z6y5q4 " + selector);

      // Get root element
      const getRootElement = () => document.querySelector(".bw-bubble-m7z6y5q4");

      // Define utility functions
      BubbleBwbubblem7z6y5q4.$ = $;
      BubbleBwbubblem7z6y5q4.$$ = $$;
      BubbleBwbubblem7z6y5q4.getRootElement = getRootElement;
      BubbleBwbubblem7z6y5q4.scopePrefix = "bw-bubble-m7z6y5q4";

      // Add event isolation helpers
      BubbleBwbubblem7z6y5q4.isolateEvent = function(event) {
        if (!event) return;
        const path = event.composedPath ? event.composedPath() : [];
        const isOutside = path.every(el => {
          return !(el instanceof Element && el.matches(".bw-bubble-m7z6y5q4"));
        });

        if (isOutside) {
          event.stopPropagation();
        }
      };

      // Add DOM utilities
      BubbleBwbubblem7z6y5q4.create = function(tagName, attributes = {}, ...children) {
        const element = document.createElement(tagName);

        // Add data attribute for CSS isolation
        element.setAttribute("data-bw-bubble-m7z6y5q4", '');

        // Add attributes
        Object.entries(attributes).forEach(([key, value]) => {
          if (key === 'className') {
            element.className = value;
          } else if (key === 'style' && typeof value === 'object') {
            Object.assign(element.style, value);
          } else if (key.startsWith('on') && typeof value === 'function') {
            const eventName = key.slice(2).toLowerCase();
            element.addEventListener(eventName, value);
          } else {
            element.setAttribute(key, value);
          }
        });

        // Append children
        children.forEach(child => {
          if (typeof child === 'string') {
            element.appendChild(document.createTextNode(child));
          } else if (child instanceof Node) {
            element.appendChild(child);
          }
        });

        return element;
      };

      // Main code
      BubbleBwbubblem7z6y5q4.init = function() {
        // Global variables
        let currentDisease = 'mpox-2024';
        let diseaseData = {};
        let chartsInstances = {};
        let darkMode = localStorage.getItem('darkMode') === 'enabled';

        // Main application initialization
        async function initializeApp() {
          try {
            console.log("Starting application initialization...");

            // Initialize UI components that don't depend on data
            initDarkMode();
            initNavbar();
            initMobileMenu();
            initMenuNavigation();
            initSearch();

            // Generate demo disease data
            generateDemoData();

            // Initialize components that depend on disease data
            initDiseaseSelectors();
            initMapPlaceholders();
            initInteractiveElements();

            console.log("Application initialization complete");
          } catch (error) {
            console.error("Error during application initialization:", error);
            alert("There was a problem initializing the application. Please check the console for details.");
          }
        }

        // Initialize when the DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
          initializeApp().catch(error => {
            console.error("Failed to initialize application:", error);
          });
        });

        // Initialize dark mode functionality
        function initDarkMode() {
          // Check if user has previously selected dark mode
          if (darkMode) {
            document.documentElement.setAttribute('data-theme', 'dark');
          }

          const darkModeToggle = document.getElementById('dark-mode-toggle');
          if (darkModeToggle) {
            darkModeToggle.addEventListener('click', function() {
              // Toggle dark mode
              darkMode = !darkMode;

              // Update localStorage
              localStorage.setItem('darkMode', darkMode ? 'enabled' : 'disabled');

              // Apply or remove the dark theme class
              if (darkMode) {
                document.documentElement.setAttribute('data-theme', 'dark');
              } else {
                document.documentElement.removeAttribute('data-theme');
              }

              // Update charts with new theme colors if they exist
              updateChartsTheme();
            });
          }
        }

        // Update charts theme when switching modes
        function updateChartsTheme() {
          // Update all chart instances with new theme colors
          for (const chartId in chartsInstances) {
            if (chartsInstances[chartId]) {
              chartsInstances[chartId].update();
            }
          }
        }

        // Initialize mobile menu functionality
        function initMobileMenu() {
          const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
          const navItems = document.getElementById('nav-items');

          if (mobileMenuToggle && navItems) {
            mobileMenuToggle.addEventListener('click', function() {
              navItems.classList.toggle('show');

              // Change icon based on menu state
              const icon = this.querySelector('i');
              if (navItems.classList.contains('show')) {
                icon.classList.remove('fa-bars');
                icon.classList.add('fa-times');
              } else {
                icon.classList.remove('fa-times');
                icon.classList.add('fa-bars');
              }
            });

            // Close menu when a link is clicked
            const navLinks = navItems.querySelectorAll('a');
            navLinks.forEach(link => {
              link.addEventListener('click', function() {
                // Only close if we're in mobile view (menu toggle is visible)
                if (window.getComputedStyle(mobileMenuToggle).display !== 'none') {
                  navItems.classList.remove('show');
                  const icon = mobileMenuToggle.querySelector('i');
                  icon.classList.remove('fa-times');
                  icon.classList.add('fa-bars');
                }
              });
            });

            // Close menu when clicking outside
            document.addEventListener('click', function(event) {
              if (!navItems.contains(event.target) && !mobileMenuToggle.contains(event.target) && navItems.classList.contains('show')) {
                navItems.classList.remove('show');
                const icon = mobileMenuToggle.querySelector('i');
                icon.classList.remove('fa-times');
                icon.classList.add('fa-bars');
              }
            });
          }
        }

        // Search flyout utility functions
        function toggleSearchFlyout() {
          const searchFlyout = document.getElementById('search-flyout');
          if (searchFlyout.classList.contains('active')) {
            hideSearchFlyout();
          } else {
            showSearchFlyout();
          }
        }

        function showSearchFlyout() {
          const searchFlyout = document.getElementById('search-flyout');
          searchFlyout.classList.add('active');
          setTimeout(() => {
            // Focus on input after animation completes
            const searchInput = searchFlyout.querySelector('input');
            if (searchInput) searchInput.focus();
          }, 300);
        }

        function hideSearchFlyout() {
          const searchFlyout = document.getElementById('search-flyout');
          searchFlyout.classList.remove('active');
        }

        function performSearch(query) {
          if (query.trim()) {
            console.log('Searching for:', query);
            // In a real implementation, this would perform a search and display results
            // For now, just hide the search flyout and show a temporary message
            hideSearchFlyout();

            // Show a temporary search message
            const messageDiv = document.createElement('div');
            messageDiv.className = 'search-message';
            messageDiv.innerHTML = `<p>Searching for: <strong>${query}</strong></p>`;
            document.body.appendChild(messageDiv);

            setTimeout(() => {
              messageDiv.classList.add('show');
              setTimeout(() => {
                messageDiv.classList.remove('show');
                setTimeout(() => {
                  document.body.removeChild(messageDiv);
                }, 300);
              }, 2000);
            }, 100);
          }
        }

        // Initialize navbar functionality
        function initNavbar() {
          // Dropdown menu functionality
          const navItems = document.querySelectorAll('.nav-item');

          // Add click event to each nav item
          navItems.forEach(item => {
            const link = item.querySelector('a');
            const dropdown = item.querySelector('.dropdown-content');

            if (link && dropdown) {
              link.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();

                // Close all other open dropdowns
                navItems.forEach(otherItem => {
                  if (otherItem !== item) {
                    otherItem.classList.remove('active');
                    const otherDropdown = otherItem.querySelector('.dropdown-content');
                    if (otherDropdown) {
                      otherDropdown.classList.remove('show');
                    }
                  }
                });

                // Toggle current dropdown
                item.classList.toggle('active');
                dropdown.classList.toggle('show');
              });
            }
          });

          // Close dropdown when clicking outside
          document.addEventListener('click', function(e) {
            navItems.forEach(item => {
              const dropdown = item.querySelector('.dropdown-content');
              if (dropdown && !item.contains(e.target)) {
                item.classList.remove('active');
                dropdown.classList.remove('show');
              }
            });
          });

          // Search functionality
          const searchIcon = document.querySelector('.search-icon');
          const searchFlyout = document.getElementById('search-flyout');

          if (searchIcon && searchFlyout) {
            // Search icon click event
            searchIcon.addEventListener('click', function(e) {
              e.preventDefault();
              e.stopPropagation(); // Prevent event from bubbling up
              toggleSearchFlyout();

              // Close any open dropdowns when search is opened
              navItems.forEach(item => {
                item.classList.remove('active');
                const dropdown = item.querySelector('.dropdown-content');
                if (dropdown) {
                  dropdown.classList.remove('show');
                }
              });
            });

            // Close button click event
            const closeBtn = searchFlyout.querySelector('.search-close');
            if (closeBtn) {
              closeBtn.addEventListener('click', function() {
                hideSearchFlyout();
              });
            }

            // Close search flyout when clicked outside
            document.addEventListener('click', function(event) {
              if (searchFlyout.classList.contains('active') &&
                  !searchFlyout.contains(event.target) &&
                  !searchIcon.contains(event.target)) {
                hideSearchFlyout();
              }
            });

            // Close search flyout when ESC key is pressed
            document.addEventListener('keydown', function(e) {
              if (e.key === 'Escape' && searchFlyout.classList.contains('active')) {
                hideSearchFlyout();
              }
            });

            // Handle search submission
            const searchInput = searchFlyout.querySelector('input');
            if (searchInput) {
              searchInput.addEventListener('keyup', function(e) {
                if (e.key === 'Enter') {
                  performSearch(this.value);
                }
              });

              // Prevent clicks inside search flyout from closing it
              searchFlyout.addEventListener('click', function(e) {
                e.stopPropagation();
              });
            }
          }
        }

        // Initialize navigation menu
        function initMenuNavigation() {
          const menuItems = document.querySelectorAll('.menu-item');
          const sections = document.querySelectorAll('.section');

          menuItems.forEach(item => {
            item.addEventListener('click', function() {
              const targetSection = this.getAttribute('data-section');

              // Update menu active state
              menuItems.forEach(mi => mi.classList.remove('active'));
              this.classList.add('active');

              // Show target section, hide others
              sections.forEach(section => {
                section.classList.remove('active');
                if (section.id === targetSection) {
                  section.classList.add('active');
                }
              });

              // Update data based on active section
              if (targetSection === 'diseases') {
                // Get the active disease button or default to the first one
                const activeBtn = document.querySelector('.disease-btn.active') || document.querySelector('.disease-btn');
                if (activeBtn) {
                  const diseaseId = activeBtn.getAttribute('data-disease');
                  updateDiseaseDetails(diseaseId);
                }
              } else if (targetSection === 'genomics') {
                // Get the active genomics button or default to the first one
                const activeBtn = document.querySelector('.genomics-btn.active') || document.querySelector('.genomics-btn');
                if (activeBtn) {
                  const diseaseId = activeBtn.getAttribute('data-disease');
                  updateGenomicsData(diseaseId);
                }
              } else if (targetSection === 'predictions') {
                // Reset prediction data with a slight delay to ensure DOM is ready
                setTimeout(() => {
                  // Force active disease to be current
                  const activeBtn = document.querySelector('.prediction-btn.active') || document.querySelector('.prediction-btn');
                  if (activeBtn) {
                    currentDisease = activeBtn.getAttribute('data-disease');
                  }
                  initPredictionsData();
                }, 200);
              }
            });
          });
        }

        // Generate demo disease data
        function generateDemoData() {
          console.log("Generating demo disease data...");

          // Create disease data objects
          diseaseData = {
            'mpox-2024': createDiseaseData('Monkeypox virus', 8743, 276, {
              variants: [
                { name: 'Clade I', percentage: 20, r0: 1.3 },
                { name: 'Clade II', percentage: 65, r0: 1.8 },
                { name: 'Clade III', percentage: 15, r0: 1.5 }
              ],
              countries: {
                'DR Congo': 3450,
                'Nigeria': 2100,
                'Ghana': 980,
                'UK': 670,
                'Brazil': 520
              }
            }),
            'h5n1-2024': createDiseaseData('Influenza A/H5N1', 4219, 381, {
              variants: [
                { name: 'Clade 2.3.4.4b', percentage: 75, r0: 2.1 },
                { name: 'Clade 2.3.2.1a', percentage: 15, r0: 1.7 },
                { name: 'Other clades', percentage: 10, r0: 1.5 }
              ],
              countries: {
                'USA': 1280,
                'Mexico': 960,
                'China': 840,
                'Vietnam': 520,
                'Indonesia': 450
              }
            }),
            'sarscov2': createDiseaseData('SARS-CoV-2', 712400000, 6900000, {
              variants: [
                { name: 'JN.1', percentage: 52, r0: 1.8 },
                { name: 'XBB.1.5', percentage: 28, r0: 1.6 },
                { name: 'FLiRT', percentage: 12, r0: 1.9 },
                { name: 'Others', percentage: 8, r0: 1.5 }
              ],
              countries: {
                'India': 44500000,
                'USA': 36800000,
                'Brazil': 29400000,
                'China': 22600000,
                'Russia': 18900000
              }
            }),
            'ebolavirus': createDiseaseData('Ebolavirus', 3476, 1872, {
              variants: [
                { name: 'Zaire', percentage: 82, r0: 1.7 },
                { name: 'Sudan', percentage: 15, r0: 1.5 },
                { name: 'Others', percentage: 3, r0: 1.3 }
              ],
              countries: {
                'DR Congo': 1680,
                'Uganda': 820,
                'Sierra Leone': 420,
                'Guinea': 320,
                'Liberia': 180
              }
            }),
            'dengue': createDiseaseData('Dengue virus', 128800, 1432, {
              variants: [
                { name: 'DENV-1', percentage: 32, r0: 1.4 },
                { name: 'DENV-2', percentage: 38, r0: 1.6 },
                { name: 'DENV-3', percentage: 22, r0: 1.3 },
                { name: 'DENV-4', percentage: 8, r0: 1.2 }
              ],
              countries: {
                'Brazil': 42600,
                'Philippines': 32400,
                'India': 28500,
                'Indonesia': 16700,
                'Mexico': 8600
              }
            }),
            'zika': createDiseaseData('Zika virus', 6874, 58, {
              variants: [
                { name: 'Asian', percentage: 72, r0: 1.3 },
                { name: 'African', percentage: 28, r0: 1.1 }
              ],
              countries: {
                'Brazil': 2890,
                'Colombia': 1560,
                'Mexico': 980,
                'Puerto Rico': 780,
                'Honduras': 530
              }
            })
          };

          console.log("Demo data generated for diseases:", Object.keys(diseaseData));
        }

        // Create disease data object with timeline
        function createDiseaseData(name, cases, deaths, extra = {}) {
          const today = new Date();
          const timeline = [];

          // Generate random timeline data for past 30 days
          for (let i = 29; i >= 0; i--) {
            const date = new Date(today);
            date.setDate(date.getDate() - i);

            // Make the data trend upward slightly with random variation
            const factor = 1 + (30 - i) / 60; // Increases as we get closer to today
            const baseValue = cases / 100 * factor;
            const randomVariation = (Math.random() * 0.4 + 0.8); // 0.8-1.2 random factor

            timeline.push({
              date: date.toISOString().split('T')[0],
              newCases: Math.round(baseValue * randomVariation),
              totalCases: Math.round(cases * (0.7 + (30 - i) / 100)) // Cumulative growth
            });
          }

          return {
            name,
            totalCases: cases,
            fatalitiesCount: deaths,
            r0: ((extra.variants || []).reduce((sum, v) => sum + v.r0 * v.percentage / 100, 0) || 1.5).toFixed(2),
            timeline,
            genomicData: {
              variants: extra.variants || []
            },
            countries: extra.countries || {}
          };
        }

        // Initialize disease selector buttons
        function initDiseaseSelectors() {
          // Disease detail page selectors
          const diseaseButtons = document.querySelectorAll('.disease-btn');
          diseaseButtons.forEach(btn => {
            btn.addEventListener('click', function() {
              const diseaseId = this.getAttribute('data-disease');

              // Update active button
              diseaseButtons.forEach(b => b.classList.remove('active'));
              this.classList.add('active');

              // Update disease details
              updateDiseaseDetails(diseaseId);
            });
          });

          // Genomics page selectors
          const genomicsButtons = document.querySelectorAll('.genomics-btn');
          genomicsButtons.forEach(btn => {
            btn.addEventListener('click', function() {
              const diseaseId = this.getAttribute('data-disease');

              // Update active button
              genomicsButtons.forEach(b => b.classList.remove('active'));
              this.classList.add('active');

              // Update genomics data
              updateGenomicsData(diseaseId);
            });
          });

          // Outbreak card buttons
          const outbreakCards = document.querySelectorAll('.outbreak-card');
          outbreakCards.forEach(card => {
            const viewDetailsBtn = card.querySelector('.btn-details');
            viewDetailsBtn.addEventListener('click', function() {
              const diseaseId = card.getAttribute('data-disease');

              // Navigate to disease detail page
              const menuItems = document.querySelectorAll('.menu-item');
              menuItems.forEach(mi => {
                mi.classList.remove('active');
                if (mi.getAttribute('data-section') === 'diseases') {
                  mi.classList.add('active');
                }
              });

              // Show diseases section
              const sections = document.querySelectorAll('.section');
              sections.forEach(section => {
                section.classList.remove('active');
                if (section.id === 'diseases') {
                  section.classList.add('active');
                }
              });

              // Update active disease button
              const diseaseButtons = document.querySelectorAll('.disease-btn');
              diseaseButtons.forEach(btn => {
                btn.classList.remove('active');
                if (btn.getAttribute('data-disease') === diseaseId) {
                  btn.classList.add('active');
                }
              });

              // Update disease details
              updateDiseaseDetails(diseaseId);
            });
          });
        }

        // Initialize search functionality
        function initSearch() {
          const datasetSearchBtn = document.getElementById('search-datasets-btn');
          if (datasetSearchBtn) {
            datasetSearchBtn.addEventListener('click', function() {
              const datasetSearchEl = document.getElementById('dataset-search');
              const datasetQuery = datasetSearchEl ? datasetSearchEl.value.trim() : '';
              if (datasetQuery) {
                // For demo purposes, just log the query
                console.log('Searching for datasets:', datasetQuery);
                // In a real implementation, this would fetch and display matching datasets
              }
            });
          }
        }

        // Initialize disclaimer toggle functionality
        function initDisclaimerToggle() {
          const disclaimerToggle = document.getElementById('disclaimer-toggle');
          const disclaimerContainer = document.getElementById('disclaimer-container');

          if (disclaimerToggle && disclaimerContainer) {
            // Make sure it's hidden by default
            disclaimerContainer.classList.add('hidden');

            // Add click event listener
            disclaimerToggle.addEventListener('click', function(e) {
              e.preventDefault();
              disclaimerContainer.classList.toggle('hidden');

              // Subtle animation effect
              if (!disclaimerContainer.classList.contains('hidden')) {
                disclaimerContainer.style.opacity = '0';
                setTimeout(() => {
                  disclaimerContainer.style.opacity = '1';
                }, 10);
              }
            });

            console.log('Disclaimer toggle initialized');
          } else {
            console.warn('Disclaimer elements not found');
          }
        }

        // Initialize buttons and interactive elements
        function initInteractiveElements() {
          // Prediction timeframe buttons
          const timeframeButtons = document.querySelectorAll('.timeframe-btn');
          timeframeButtons.forEach(btn => {
            btn.addEventListener('click', function(event) {
              // Use the event target instead of 'this' for more reliable behavior
              const clickedButton = event.currentTarget;

              timeframeButtons.forEach(b => b.classList.remove('active'));
              clickedButton.classList.add('active');

              const days = clickedButton.getAttribute('data-days');
              updatePredictionTimeframe(days);
            });
          });

          // Prediction disease buttons
          const predictionButtons = document.querySelectorAll('.prediction-btn');
          predictionButtons.forEach(btn => {
            btn.addEventListener('click', function(event) {
              // Use the event target instead of 'this' for more reliable behavior
              const clickedButton = event.currentTarget;
              const diseaseId = clickedButton.getAttribute('data-disease');

              // Update active button
              predictionButtons.forEach(b => b.classList.remove('active'));
              clickedButton.classList.add('active');

              // Update prediction disease
              updatePredictionDisease(diseaseId);
            });
          });

          // Dataset import buttons
          const importButtons = document.querySelectorAll('.btn-import');
          importButtons.forEach(btn => {
            btn.addEventListener('click', function(event) {
              // Use the event target instead of 'this' for more reliable behavior
              const clickedButton = event.currentTarget;
              const datasetCard = clickedButton.closest('.dataset-card');
              const datasetName = datasetCard.querySelector('h4').textContent;

              // For demo purposes, just show an alert
              alert(`Importing dataset: ${datasetName}`);
              // In a real implementation, this would trigger the import process
            });
          });

          // Initialize the disclaimer toggle
          initDisclaimerToggle();
        }

        // Update disease details section
        function updateDiseaseDetails(diseaseId) {
          currentDisease = diseaseId;
          const disease = diseaseData[diseaseId];

          if (!disease) return;

          // Update stats
          document.getElementById('disease-total-cases').textContent = formatNumber(disease.totalCases);
          document.getElementById('disease-fatalities').textContent = formatNumber(disease.fatalitiesCount);

          const fatalityRate = (disease.fatalitiesCount / disease.totalCases * 100).toFixed(2);
          document.getElementById('disease-fatality-rate').textContent = `${fatalityRate}%`;

          // Calculate average R0 from variants
          const avgR0 = disease.genomicData.variants.reduce((sum, variant) => {
            return sum + (variant.r0 * (variant.percentage / 100));
          }, 0).toFixed(2);
          document.getElementById('disease-r0').textContent = avgR0;

          // Update the disease heading with the actual disease name, styled with HTML
          document.querySelector('.disease-info-container h3').innerHTML = `About <span class="disease-name-highlight">${disease.name}</span>`;

          // Add disease information based on the selected disease
          updateDiseaseInformation(diseaseId);

          // Update charts
          updateTimelineChart(disease);
          updateGeoChart(disease);
        }

        // Add detailed disease information
        function updateDiseaseInformation(diseaseId) {
          // Disease-specific information mapping
          const diseaseInfo = {
            'mpox-2024': {
              description: "Monkeypox is a zoonotic disease caused by the monkeypox virus, belonging to the Orthopoxvirus genus. The 2024 outbreak represents a concerning evolution with increased human-to-human transmission compared to historical patterns.",
              transmission: "Direct contact with infected animals or humans, bodily fluids, contaminated materials, and respiratory droplets during prolonged face-to-face contact.",
              incubation: "5-21 days, typically 6-13 days",
              symptoms: "Fever, headache, muscle aches, back pain, swollen lymph nodes, followed by a distinctive rash that evolves through several stages",
              prevention: "Avoid contact with infected animals or humans, practice good hand hygiene, use PPE when caring for patients, and vaccination for high-risk groups.",
              alerts: "WHO has declared a Public Health Emergency of International Concern due to the rapid spread across multiple regions and emergence of new transmission patterns."
            },
            'h5n1-2024': {
              description: "Highly pathogenic avian influenza (HPAI) H5N1 is primarily a disease of birds, but the 2024 strain shows concerning adaptations enabling more efficient transmission between mammals, raising pandemic potential.",
              transmission: "Contact with infected birds or their environments, limited human-to-human transmission in close contacts. Recent cases show possible airborne spread in mammals.",
              incubation: "2-8 days, typically 3-5 days",
              symptoms: "High fever, cough, severe respiratory difficulties, pneumonia, multi-organ failure in severe cases",
              prevention: "Avoid contact with sick or dead birds, thorough cooking of poultry products, vaccination of poultry, use of personal protective equipment when handling birds.",
              alerts: "FAO and WHO have issued a joint warning about the pandemic potential of current H5N1 strains with recommendations for enhanced surveillance and containment."
            },
            'sarscov2': {
              description: "SARS-CoV-2 is a coronavirus that causes COVID-19. Despite widespread vaccination efforts, the virus continues to evolve, producing variants that partially evade immunity from prior infection and vaccination.",
              transmission: "Respiratory droplets and aerosols, with some evidence of fomite transmission. High transmissibility, especially in indoor settings with poor ventilation.",
              incubation: "2-14 days, typically 5-6 days",
              symptoms: "Fever, cough, fatigue, loss of smell or taste, shortness of breath, ranging from mild to severe",
              prevention: "Vaccination, mask-wearing in high-risk settings, adequate ventilation, physical distancing, hand hygiene",
              alerts: "Current variants demonstrate immune evasion capabilities. Health authorities recommend updated booster doses targeting circulating variants, especially for vulnerable populations."
            },
            'ebolavirus': {
              description: "Ebola virus disease is a severe, often fatal illness affecting humans and other primates. The 2024 outbreak involves the Zaire ebolavirus species, the most lethal strain of the virus.",
              transmission: "Direct contact with blood, secretions, or other bodily fluids of infected people or animals, and with surfaces contaminated with these fluids.",
              incubation: "2-21 days, typically 8-10 days",
              symptoms: "Sudden fever, fatigue, muscle pain, headache, and sore throat, followed by vomiting, diarrhea, rash, and both internal and external bleeding",
              prevention: "Avoid contact with infected individuals, practice careful hygiene, use protective equipment when caring for patients, safe burial practices, vaccination in affected areas",
              alerts: "CDC and WHO have deployed rapid response teams to affected regions. Ring vaccination strategy is being implemented in outbreak epicenters."
            },
            'dengue': {
              description: "Dengue is a mosquito-borne viral disease that has rapidly spread in tropical and subtropical regions. The current outbreak demonstrates unusual intensity and geographic spread.",
              transmission: "Primarily transmitted by female Aedes aegypti mosquitoes and, to a lesser extent, Ae. albopictus. No direct person-to-person transmission.",
              incubation: "3-14 days, typically 4-7 days",
              symptoms: "High fever, severe headache, pain behind the eyes, joint and muscle pain, rash, mild bleeding (nose or gums)",
              prevention: "Vector control measures, personal protection from mosquito bites (repellents, appropriate clothing, mosquito nets), environmental management to reduce breeding sites",
              alerts: "PAHO has issued alerts for several Latin American countries experiencing abnormally high case counts. Climate change is contributing to expanded mosquito habitats."
            },
            'zika': {
              description: "Zika virus disease is caused by a virus transmitted primarily by Aedes mosquitoes. While symptoms are generally mild, Zika virus infection during pregnancy can cause severe birth defects.",
              transmission: "Primarily through infected Aedes mosquitoes. Can also be transmitted through sexual contact and from mother to fetus during pregnancy.",
              incubation: "3-14 days",
              symptoms: "Mild fever, rash, conjunctivitis, muscle and joint pain, malaise, headache. Many infections are asymptomatic.",
              prevention: "Protection against mosquito bites, elimination of breeding sites, use of condoms to prevent sexual transmission, postponing travel to affected areas for pregnant women",
              alerts: "WHO has highlighted recent unexpected spread to previously unaffected regions. Particular vigilance is recommended for pregnant women in endemic areas."
            }
          };

          // Get disease specific information or use placeholder
          const info = diseaseInfo[diseaseId] || {
            description: "Detailed information about this disease is being compiled.",
            transmission: "Information not available.",
            incubation: "Information not available.",
            symptoms: "Information not available.",
            prevention: "Information not available.",
            alerts: "No current alerts for this disease."
          };

          // Update disease information elements
          document.getElementById('disease-description').textContent = info.description;
          document.getElementById('disease-transmission').textContent = info.transmission;
          document.getElementById('disease-incubation').textContent = info.incubation;
          document.getElementById('disease-symptoms').textContent = info.symptoms;
          document.getElementById('disease-prevention').textContent = info.prevention;

          // Update alerts with appropriate styling based on disease severity
          const alertsElement = document.getElementById('disease-alerts');
          alertsElement.textContent = info.alerts;

          // Apply different styling based on disease severity
          if (diseaseId === 'h5n1-2024' || diseaseId === 'ebolavirus') {
            alertsElement.className = 'p-4 border-l-4 border-red-500 bg-red-50 text-red-700';
          } else if (diseaseId === 'mpox-2024' || diseaseId === 'dengue') {
            alertsElement.className = 'p-4 border-l-4 border-orange-500 bg-orange-50 text-orange-700';
          } else if (diseaseId === 'sarscov2') {
            alertsElement.className = 'p-4 border-l-4 border-yellow-500 bg-yellow-50 text-yellow-700';
          } else if (diseaseId === 'zika') {
            alertsElement.className = 'p-4 border-l-4 border-blue-500 bg-blue-50 text-blue-700';
          } else {
            alertsElement.className = 'p-4 border-l-4 border-gray-500 bg-gray-50 text-gray-700';
          }
        }

        // Initialize map visualizations placeholder
        function initMapPlaceholders() {
          // Initialize world map for demo purposes with placeholder
          const worldMap = document.getElementById('world-map');
          if (worldMap) {
            worldMap.innerHTML = `
              <div style="display: flex; height: 100%; justify-content: center; align-items: center; flex-direction: column;">
                <p>Map visualization is prepared</p>
                <p style="font-size: 14px; color: #666; margin-top: 10px;">Real maps would use D3.js to render interactive maps</p>
              </div>
            `;
          }

          // Initialize prediction map placeholder
          const predictionMap = document.getElementById('prediction-map');
          if (predictionMap) {
            predictionMap.innerHTML = `
              <div style="display: flex; height: 100%; justify-content: center; align-items: center; flex-direction: column;">
                <p>Prediction map visualization is prepared</p>
                <p style="font-size: 14px; color: #666; margin-top: 10px;">Interactive hotspots would show affected regions</p>
              </div>
            `;
          }
        }

        // Update genomics data
        function updateGenomicsData(diseaseId) {
          const disease = diseaseData[diseaseId];

          if (!disease) return;

          // Update variants chart
          updateVariantsChart(disease);

          // Update variants table
          updateVariantsTable(disease);
        }

        // Update the variants chart in genomics section
        function updateVariantsChart(disease) {
          const variantsCanvas = document.getElementById('variants-chart');
          if (!variantsCanvas) return;

          const ctx = variantsCanvas.getContext('2d');

          // Destroy existing chart if it exists
          if (chartsInstances['variants-chart']) {
            chartsInstances['variants-chart'].destroy();
          }

          // Extract data for the chart
          const labels = disease.genomicData.variants.map(v => v.name);
          const data = disease.genomicData.variants.map(v => v.percentage);

          // Use specified colors for variant charts
          const colors = [
            '#a6c9b8',
            '#649baf',
            '#aeaac9',
            '#ecc188',
            'rgba(230, 126, 34, 0.8)' // keep one backup color in case there are more variants
          ];

          // Create the chart
          chartsInstances['variants-chart'] = new Chart(ctx, {
            type: 'doughnut',
            data: {
              labels: labels,
              datasets: [{
                data: data,
                backgroundColor: colors.slice(0, data.length),
                borderColor: '#ffffff',
                borderWidth: 2
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  position: 'right'
                },
                tooltip: {
                  callbacks: {
                    label: function(context) {
                      return `${context.label}: ${context.raw}%`;
                    }
                  }
                }
              }
            }
          });
        }

        // Update the variants table
        function updateVariantsTable(disease) {
          const tableBody = document.getElementById('variants-table-body');
          if (!tableBody) return;

          tableBody.innerHTML = '';

          // Create mutation data for each variant (for demo purposes)
          const mutationData = {
            "Clade I": [
              { gene: "S", position: 484, original: "E", mutation: "K", effect: "Receptor binding" },
              { gene: "S", position: 501, original: "N", mutation: "Y", effect: "Increased transmissibility" },
              { gene: "N", position: 203, original: "R", mutation: "K", effect: "Nucleocapsid stability" }
            ],
            "Clade II": [
              { gene: "S", position: 452, original: "L", mutation: "R", effect: "Immune escape" },
              { gene: "S", position: 478, original: "T", mutation: "K", effect: "Receptor binding" },
              { gene: "ORF1ab", position: 4715, original: "P", mutation: "L", effect: "Replication efficiency" },
              { gene: "S", position: 614, original: "D", mutation: "G", effect: "Spike stability" }
            ],
            "Clade III": [
              { gene: "S", position: 417, original: "K", mutation: "N", effect: "Receptor binding" },
              { gene: "S", position: 681, original: "P", mutation: "H", effect: "Furin cleavage" }
            ],
            "DENV-1": [
              { gene: "E", position: 204, original: "L", mutation: "F", effect: "Envelope structure" },
              { gene: "NS1", position: 123, original: "A", mutation: "V", effect: "Immune evasion" }
            ],
            "DENV-2": [
              { gene: "prM", position: 53, original: "H", mutation: "Q", effect: "Virion assembly" },
              { gene: "NS5", position: 401, original: "R", mutation: "K", effect: "RNA replication" }
            ],
            "DENV-3": [
              { gene: "C", position: 87, original: "T", mutation: "M", effect: "Capsid structure" },
              { gene: "NS3", position: 250, original: "S", mutation: "T", effect: "Protease activity" }
            ],
            "DENV-4": [
              { gene: "E", position: 345, original: "N", mutation: "Y", effect: "Receptor binding" }
            ],
            "JN.1": [
              { gene: "S", position: 339, original: "G", mutation: "H", effect: "Immune escape" },
              { gene: "S", position: 346, original: "R", mutation: "T", effect: "Receptor binding" },
              { gene: "S", position: 444, original: "K", mutation: "T", effect: "Neutralization resistance" }
            ],
            "XBB.1.5": [
              { gene: "S", position: 486, original: "F", mutation: "P", effect: "Receptor binding" },
              { gene: "S", position: 252, original: "G", mutation: "V", effect: "Immune escape" }
            ],
            "FLiRT": [
              { gene: "S", position: 456, original: "L", mutation: "R", effect: "Receptor binding" },
              { gene: "S", position: 478, original: "T", mutation: "R", effect: "Immune escape" }
            ],
            "Others": [
              { gene: "Various", position: 0, original: "-", mutation: "-", effect: "Multiple effects" }
            ]
          };

          // Add mutations for other variants
          for (const key in disease.genomicData.variants) {
            if (!mutationData[disease.genomicData.variants[key].name]) {
              mutationData[disease.genomicData.variants[key].name] = [
                { gene: "S", position: Math.floor(Math.random() * 1000) + 1, original: "A", mutation: "T", effect: "Unknown" },
                { gene: "N", position: Math.floor(Math.random() * 500) + 1, original: "C", mutation: "G", effect: "Unknown" }
              ];
            }
          }

          disease.genomicData.variants.forEach(variant => {
            const row = document.createElement('tr');

            // Create a string representation of mutations for the table
            const mutations = mutationData[variant.name] || [];
            const mutationText = mutations.map(m => `${m.gene}:${m.original}${m.position}${m.mutation}`).join(', ');

            row.innerHTML = `
              <td>${variant.name}</td>
              <td>${variant.percentage}%</td>
              <td>${variant.r0}</td>
              <td>${mutationText}</td>
            `;

            // Make row clickable to show mutation visualization
            row.style.cursor = 'pointer';
            row.addEventListener('click', () => {
              // Highlight the selected row
              document.querySelectorAll('#variants-table-body tr').forEach(tr => {
                tr.classList.remove('selected-variant');
              });
              row.classList.add('selected-variant');

              // Visualize mutations (in a real app, this would create a D3 visualization)
              visualizeMutationsPlaceholder(variant.name, mutationData[variant.name] || []);
            });

            tableBody.appendChild(row);
          });

          // Select the first variant by default
          if (disease.genomicData.variants.length > 0) {
            const firstVariant = disease.genomicData.variants[0].name;
            if (tableBody.querySelector('tr')) {
              tableBody.querySelector('tr').classList.add('selected-variant');
              visualizeMutationsPlaceholder(firstVariant, mutationData[firstVariant] || []);
            }
          }
        }

        // Placeholder for mutation visualization
        function visualizeMutationsPlaceholder(variantName, mutations) {
          const container = document.getElementById('mutation-viz');
          if (!container) return;

          // Clear previous visualization
          container.innerHTML = '';

          if (mutations.length === 0) {
            container.innerHTML = '<p class="genomics-placeholder">No mutation data available for this variant</p>';
            return;
          }

          // Create a placeholder visualization
          const placeholderHtml = `
            <div style="padding: 20px;">
              <h4 style="text-align: center; margin-bottom: 15px;">Mutations in ${variantName}</h4>
              <div style="display: flex; justify-content: center; margin-bottom: 20px;">
                <div style="width: 80%; height: 40px; background: linear-gradient(90deg, #649baf, #f1f5f9);
                    border-radius: 4px; position: relative; overflow: hidden;">
                  <div style="position: absolute; top: -10px; left: 0; width: 100%; display: flex; justify-content: space-between; padding: 0 10px;">
                    <span style="font-size: 12px;">1</span>
                    <span style="font-size: 12px; text-align: center;">Genome position</span>
                    <span style="font-size: 12px;">${Math.max(...mutations.map(m => m.position || 0))}</span>
                  </div>
                </div>
              </div>
              <div style="display: flex; flex-wrap: wrap; gap: 15px; justify-content: center;">
                ${mutations.map(m => `
                  <div style="background-color: #f1f5f9; border-radius: 6px; padding: 12px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
                    <div style="font-weight: 600; color: #3b82f6; margin-bottom: 8px;">
                      ${m.gene}:${m.original}${m.position}${m.mutation}
                    </div>
                    <div style="font-size: 14px;">
                      <span style="color: #64748b;">Position:</span> ${m.position}
                    </div>
                    <div style="font-size: 14px;">
                      <span style="color: #64748b;">Change:</span> ${m.original} → ${m.mutation}
                    </div>
                    <div style="font-size: 14px;">
                      <span style="color: #64748b;">Effect:</span> ${m.effect}
                    </div>
                  </div>
                `).join('')}
              </div>
              <p style="text-align: center; margin-top: 20px; font-style: italic; color: #64748b; font-size: 14px;">
                A real visualization would use D3.js to show the mutation locations on a genome map
              </p>
            </div>
          `;

          container.innerHTML = placeholderHtml;
        }

        // Initialize predictions data
        function initPredictionsData() {
          // For demo purposes, we'll use placeholder data

          // Initialize the projection chart
          createProjectionChart();

          // Initialize risk matrix placeholder
          initRiskMatrixPlaceholder();
        }

        // Create the projection chart in predictions section
        function createProjectionChart() {
          const chartElement = document.getElementById('projection-chart');
          if (!chartElement) return;

          const ctx = chartElement.getContext('2d');

          // Sample data for the projection
          const labels = [];
          const actualData = [];
          const projectedData = [];

          // Generate 30 days of data (15 past, 15 future)
          const today = new Date();
          for (let i = -15; i < 15; i++) {
            const date = new Date(today);
            date.setDate(date.getDate() + i);
            labels.push(`${date.getMonth() + 1}/${date.getDate()}`);

            if (i < 0) {
              actualData.push(Math.round(500 + Math.random() * 300 + i * 20));
              projectedData.push(null);
            } else {
              actualData.push(null);
              // Exponential growth for projection
              projectedData.push(Math.round(800 + Math.pow(1.1, i) * 100));
            }
          }

          // Get CSS variable colors for theming
          const textColor = getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim();
          const lightColor = getComputedStyle(document.documentElement).getPropertyValue('--light-color').trim();

          // Create the chart
          chartsInstances['projection-chart'] = new Chart(ctx, {
            type: 'line',
            data: {
              labels: labels,
              datasets: [
                {
                  label: 'Actual Cases',
                  data: actualData,
                  borderColor: '#3498db',
                  backgroundColor: 'rgba(52, 152, 219, 0.1)',
                  borderWidth: 2,
                  tension: 0.4,
                  fill: true
                },
                {
                  label: 'Projected Cases',
                  data: projectedData,
                  borderColor: '#e74c3c',
                  backgroundColor: 'rgba(231, 76, 60, 0.1)',
                  borderWidth: 2,
                  borderDash: [5, 5],
                  tension: 0.4,
                  fill: true
                }
              ]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              layout: {
                padding: {
                  bottom: 10
                }
              },
              plugins: {
                legend: {
                  position: 'top',
                  labels: {
                    boxWidth: 12,
                    padding: 10,
                    color: textColor || '#2c3e50'
                  }
                },
                tooltip: {
                  mode: 'index',
                  intersect: false,
                  backgroundColor: getComputedStyle(document.documentElement).getPropertyValue('--card-color').trim(),
                  titleColor: textColor || '#2c3e50',
                  bodyColor: textColor || '#2c3e50'
                }
              },
              scales: {
                x: {
                  grid: {
                    display: false
                  },
                  ticks: {
                    color: textColor || '#2c3e50',
                    maxRotation: 45,
                    minRotation: 45,
                    font: {
                      size: 10
                    }
                  }
                },
                y: {
                  beginAtZero: true,
                  grid: {
                    color: lightColor ? `${lightColor}33` : 'rgba(0, 0, 0, 0.05)'
                  },
                  ticks: {
                    color: textColor || '#2c3e50',
                    font: {
                      size: 10
                    }
                  }
                }
              }
            }
          });
        }

        // Initialize risk matrix with actual visualization
        function initRiskMatrixPlaceholder() {
          const container = document.getElementById('risk-matrix');
          if (!container) return;

          // Create a simple placeholder for the risk matrix
          const placeholderHtml = `
            <div style="height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; padding: 20px;">
              <div style="display: grid; grid-template-columns: repeat(5, 1fr); grid-template-rows: repeat(5, 1fr); gap: 2px; width: 180px; height: 180px; margin-bottom: 15px;">
                ${Array(25).fill(0).map((_, i) => {
                  const row = Math.floor(i / 5); // 0-4, 0 is top
                  const col = i % 5; // 0-4, 0 is left

                  // Calculate risk level - bottom-left is low risk, top-right is high risk
                  const riskLevel = row + col; // 0-8

                  // Choose color based on risk level
                  let color;
                  if (riskLevel <= 2) color = '#27ae60'; // Low
                  else if (riskLevel <= 4) color = '#2ecc71'; // Low-Medium
                  else if (riskLevel <= 6) color = '#f39c12'; // Medium
                  else if (riskLevel <= 7) color = '#e74c3c'; // High
                  else color = '#c0392b'; // Very High

                  // Add a marker for the current disease
                  const diseaseId = currentDisease;
                  let markerHtml = '';

                  // Position markers based on disease (just for demo)
                  if ((diseaseId === 'h5n1-2024' && row === 0 && col === 4) || (diseaseId === 'ebolavirus' && row === 0 && col === 3)) {
                    markerHtml = `<div style="position: absolute; width: 20px; height: 20px; background-color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; box-shadow: 0 0 5px rgba(0,0,0,0.3); z-index: 5;">${diseaseId.substring(0, 2)}</div>`;
                  } else if ((diseaseId === 'mpox-2024' && row === 1 && col === 3) || (diseaseId === 'dengue' && row === 1 && col === 2)) {
                    markerHtml = `<div style="position: absolute; width: 20px; height: 20px; background-color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; box-shadow: 0 0 5px rgba(0,0,0,0.3); z-index: 5;">${diseaseId.substring(0, 2)}</div>`;
                  } else if ((diseaseId === 'sarscov2' && row === 2 && col === 2) || (diseaseId === 'zika' && row === 3 && col === 1)) {
                    markerHtml = `<div style="position: absolute; width: 20px; height: 20px; background-color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; box-shadow: 0 0 5px rgba(0,0,0,0.3); z-index: 5;">${diseaseId.substring(0, 2)}</div>`;
                  }

                  return `<div style="background-color: ${color}; opacity: 0.8; border-radius: 2px; position: relative; display: flex; justify-content: center; align-items: center;">${markerHtml}</div>`;
                }).join('')}
              </div>

              <div style="display: flex; justify-content: space-between; width: 180px; margin-bottom: 10px; font-size: 12px; color: #666;">
                <span>Low</span>
                <span>Transmissibility</span>
                <span>High</span>
              </div>

              <div style="display: flex; align-items: center; width: 100%; justify-content: center; gap: 10px; font-size: 12px; color: #666;">
                <div style="display: flex; flex-direction: column; justify-content: space-between; height: 180px; margin-right: 10px;">
                  <span>High</span>
                  <span>Severity</span>
                  <span>Low</span>
                </div>
              </div>

              <div style="display: flex; flex-wrap: wrap; justify-content: center; margin-top: 10px; gap: 10px;">
                <div style="display: flex; align-items: center; margin-right: 10px; font-size: 12px;">
                  <div style="width: 12px; height: 12px; border-radius: 2px; margin-right: 5px; background-color: #c0392b;"></div>
                  <span>Very High</span>
                </div>
                <div style="display: flex; align-items: center; margin-right: 10px; font-size: 12px;">
                  <div style="width: 12px; height: 12px; border-radius: 2px; margin-right: 5px; background-color: #e74c3c;"></div>
                  <span>High</span>
                </div>
                <div style="display: flex; align-items: center; margin-right: 10px; font-size: 12px;">
                  <div style="width: 12px; height: 12px; border-radius: 2px; margin-right: 5px; background-color: #f39c12;"></div>
                  <span>Medium</span>
                </div>
                <div style="display: flex; align-items: center; margin-right: 10px; font-size: 12px;">
                  <div style="width: 12px; height: 12px; border-radius: 2px; margin-right: 5px; background-color: #2ecc71;"></div>
                  <span>Low</span>
                </div>
              </div>
            </div>
          `;

          container.innerHTML = placeholderHtml;
        }

        // Update prediction timeframe
        function updatePredictionTimeframe(days) {
          console.log(`Updating prediction timeframe to ${days} days`);

          // Update the projection chart based on the selected timeframe
          updateProjectionChart(days);
        }

        // Update prediction chart for different timeframes
        function updateProjectionChart(days) {
          const daysNum = parseInt(days, 10);
          if (isNaN(daysNum) || !chartsInstances['projection-chart']) {
            return;
          }

          // Generate new projection data based on timeframe
          const labels = [];
          const actualData = [];
          const projectedData = [];

          // Generate data (past days and future projection)
          const today = new Date();
          const pastDays = Math.floor(daysNum / 2);

          for (let i = -pastDays; i < daysNum; i++) {
            const date = new Date(today);
            date.setDate(date.getDate() + i);
            labels.push(`${date.getMonth() + 1}/${date.getDate()}`);

            if (i < 0) {
              // Past data (actual)
              const baseline = getBaselineForDisease(currentDisease);
              actualData.push(Math.round(baseline + Math.random() * (baseline * 0.2) + i * (baseline * 0.01)));
              projectedData.push(null);
            } else {
              // Future data (projected)
              actualData.push(null);

              // Calculate growth factor based on disease
              const growthFactor = getGrowthFactorForDisease(currentDisease);
              const baseline = getBaselineForDisease(currentDisease);

              // Exponential growth model with disease-specific parameters
              projectedData.push(Math.round(baseline * Math.pow(growthFactor, i * (daysNum / 30))));
            }
          }

          // Update chart data
          chartsInstances['projection-chart'].data.labels = labels;
          chartsInstances['projection-chart'].data.datasets[0].data = actualData;
          chartsInstances['projection-chart'].data.datasets[1].data = projectedData;
          chartsInstances['projection-chart'].update();
        }

        // Helper function to get baseline cases for different diseases
        function getBaselineForDisease(diseaseId) {
          const baselines = {
            'mpox-2024': 500,
            'h5n1-2024': 400,
            'sarscov2': 2000,
            'ebolavirus': 300,
            'dengue': 1500,
            'zika': 350
          };

          return baselines[diseaseId] || 500;
        }

        // Helper function to get growth factors for different diseases
        function getGrowthFactorForDisease(diseaseId) {
          const growthFactors = {
            'mpox-2024': 1.08,
            'h5n1-2024': 1.12,
            'sarscov2': 1.06,
            'ebolavirus': 1.09,
            'dengue': 1.07,
            'zika': 1.05
          };

          return growthFactors[diseaseId] || 1.08;
        }

        // Update prediction disease
        function updatePredictionDisease(diseaseId) {
          console.log(`Updating prediction disease to ${diseaseId}`);

          // Update current disease
          currentDisease = diseaseId;

          // Get the currently selected timeframe
          const activeTimeframeBtn = document.querySelector('.timeframe-btn.active');
          const days = activeTimeframeBtn ? activeTimeframeBtn.getAttribute('data-days') : '7';

          // Update the projection chart
          updateProjectionChart(days);

          // Update prediction metrics with demo values
          updatePredictionMetrics(diseaseId);

          // Refresh the risk matrix
          initRiskMatrixPlaceholder();
        }

        // Update prediction metrics with demo values
        function updatePredictionMetrics(diseaseId) {
          // Get prediction-related elements
          const peakDateEl = document.getElementById('peak-date');
          const peakCasesEl = document.getElementById('peak-cases');
          const growthRateEl = document.getElementById('growth-rate');
          const confidenceEl = document.getElementById('confidence');

          if (!peakDateEl || !peakCasesEl || !growthRateEl || !confidenceEl) return;

          // Set disease-specific values
          const today = new Date();
          let peakDays;
          let peakCases;
          let growthRate;
          let confidence;

          switch (diseaseId) {
            case 'h5n1-2024':
              peakDays = 45;
              peakCases = 12800;
              growthRate = 1.12;
              confidence = 68;
              break;
            case 'ebolavirus':
              peakDays = 35;
              peakCases = 5900;
              growthRate = 1.09;
              confidence = 72;
              break;
            case 'mpox-2024':
              peakDays = 42;
              peakCases = 9200;
              growthRate = 1.08;
              confidence = 76;
              break;
            case 'dengue':
              peakDays = 38;
              peakCases = 18400;
              growthRate = 1.07;
              confidence = 81;
              break;
            case 'sarscov2':
              peakDays = 40;
              peakCases = 28500;
              growthRate = 1.06;
              confidence = 85;
              break;
            case 'zika':
              peakDays = 45;
              peakCases = 7200;
              growthRate = 1.05;
              confidence = 79;
              break;
            default:
              peakDays = 40;
              peakCases = 10000;
              growthRate = 1.08;
              confidence = 75;
          }

          // Add small random variation
          peakDays = Math.round(peakDays * (0.95 + Math.random() * 0.1)); // ±5% variation
          peakCases = Math.round(peakCases * (0.95 + Math.random() * 0.1)); // ±5% variation

          // Set peak date
          const peakDate = new Date(today);
          peakDate.setDate(peakDate.getDate() + peakDays);
          peakDateEl.textContent = peakDate.toLocaleDateString('en-US', {
            month: 'short',
            day: 'numeric',
            year: 'numeric'
          });

          // Set other metrics
          peakCasesEl.textContent = `~${formatNumber(peakCases)}`;
          growthRateEl.textContent = growthRate.toFixed(2);
          confidenceEl.textContent = `${confidence}%`;
        }

        // Update the timeline chart in disease details
        function updateTimelineChart(disease) {
          const chartElement = document.getElementById('disease-timeline-chart');
          if (!chartElement) return;

          const ctx = chartElement.getContext('2d');

          // Destroy existing chart if it exists
          if (chartsInstances['disease-timeline-chart']) {
            chartsInstances['disease-timeline-chart'].destroy();
          }

          // Extract data for the chart
          const labels = disease.timeline.map(item => {
            const date = new Date(item.date);
            return `${date.getMonth() + 1}/${date.getDate()}`;
          });

          const data = disease.timeline.map(item => item.newCases);

          // Get theme colors from CSS variables
          const secondaryColor = getComputedStyle(document.documentElement).getPropertyValue('--secondary-color').trim();
          const textColor = getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim();
          const lightColor = getComputedStyle(document.documentElement).getPropertyValue('--light-color').trim();

          // Create the chart
          chartsInstances['disease-timeline-chart'] = new Chart(ctx, {
            type: 'line',
            data: {
              labels: labels,
              datasets: [{
                label: 'New Cases',
                data: data,
                borderColor: secondaryColor || '#3498db',
                backgroundColor: secondaryColor ? `${secondaryColor}33` : 'rgba(52, 152, 219, 0.1)',
                borderWidth: 2,
                tension: 0.4,
                fill: true
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: true,
              plugins: {
                legend: {
                  display: true,
                  position: 'top',
                  labels: {
                    color: textColor || '#2c3e50'
                  }
                },
                tooltip: {
                  enabled: true,
                  backgroundColor: getComputedStyle(document.documentElement).getPropertyValue('--card-color').trim(),
                  titleColor: textColor || '#2c3e50',
                  bodyColor: textColor || '#2c3e50'
                }
              },
              scales: {
                x: {
                  grid: {
                    display: false
                  },
                  ticks: {
                    color: textColor || '#2c3e50'
                  }
                },
                y: {
                  beginAtZero: true,
                  grid: {
                    color: lightColor ? `${lightColor}33` : 'rgba(0, 0, 0, 0.05)'
                  },
                  ticks: {
                    color: textColor || '#2c3e50'
                  }
                }
              }
            }
          });
        }

        // Update the geographic distribution chart
        function updateGeoChart(disease) {
          const chartElement = document.getElementById('disease-geo-chart');
          if (!chartElement) return;

          const ctx = chartElement.getContext('2d');

          // Destroy existing chart if it exists
          if (chartsInstances['disease-geo-chart']) {
            chartsInstances['disease-geo-chart'].destroy();
          }

          // Extract data for the chart
          const labels = Object.keys(disease.countries);
          const data = Object.values(disease.countries);

          // Create color array with the first country highlighted using CSS variables
          const secondaryDark = getComputedStyle(document.documentElement).getPropertyValue('--secondary-600').trim() || '#3d677d';
          const secondaryLight = getComputedStyle(document.documentElement).getPropertyValue('--secondary-300').trim() || '#95becb';

          const backgroundColors = labels.map((_, index) =>
            index === 0 ? secondaryDark : secondaryLight
          );

          // Create the chart
          chartsInstances['disease-geo-chart'] = new Chart(ctx, {
            type: 'bar',
            data: {
              labels: labels,
              datasets: [{
                label: 'Cases by Country',
                data: data,
                backgroundColor: backgroundColors,
                borderColor: 'rgba(0, 0, 0, 0)',
                borderWidth: 1
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: true,
              height: 300,
              plugins: {
                legend: {
                  display: false
                }
              },
              scales: {
                x: {
                  grid: {
                    display: false
                  }
                },
                y: {
                  beginAtZero: true,
                  grid: {
                    color: 'rgba(0, 0, 0, 0.05)'
                  }
                }
              }
            }
          });
        }

        // Utility function to format numbers
        function formatNumber(num) {
          if (num >= 1000000) {
            return (num / 1000000).toFixed(1) + 'M';
          } else if (num >= 1000) {
            return (num / 1000).toFixed(1) + 'K';
          } else {
            return num.toString();
          }
        }
      };

      // Auto-initialize when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', BubbleBwbubblem7z6y5q4.init);
      } else {
        BubbleBwbubblem7z6y5q4.init();
      }
    })(window, document);
    </script>








            </div>
        </div>
    <%- include('../javascript') %>
    </body>
</html>