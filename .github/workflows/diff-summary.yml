name: Generate Diff Summary

on:
  workflow_dispatch:
    inputs:
      start_commit:
        description: 'Commit hash to start diff from'
        required: true
        type: string
  push: # Optional: Trigger on pushes to main (or your main branch)
    branches:
      - dev

jobs:
  generate-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history (important for diffing from any commit)

      - name: Get Start Commit
        id: get_start_commit
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "start_commit=${{ github.event.inputs.start_commit }}" >> $GITHUB_OUTPUT
          else
            echo "start_commit=$(git rev-parse ${{ github.event.before }})" >> $GITHUB_OUTPUT
          fi
          echo "::notice::Start commit: ${{ steps.get_start_commit.outputs.start_commit }}"

      - name: Generate Diff Summary (Bash)
        id: generate_summary_bash
        run: |
          START_COMMIT="${{ steps.get_start_commit.outputs.start_commit }}"
          END_COMMIT=$(git rev-parse HEAD)
          echo "::notice::End commit: $END_COMMIT"

          # Get a list of changed files with their status (A=Added, M=Modified, D=Deleted)
          CHANGED_FILES=$(git diff --name-status $START_COMMIT $END_COMMIT)

          SUMMARY="## Diff Summary (from $START_COMMIT to $END_COMMIT)\n\n"

          while IFS=$'\t' read -r STATUS FILE; do
            case "$STATUS" in
              A)
                SUMMARY="${SUMMARY}### Added: $FILE\n\n"
                SUMMARY="${SUMMARY}`diff\n$(git diff --unified=3 $START_COMMIT $END_COMMIT -- $FILE)\n`\n\n"
                ;;
              M)
                SUMMARY="${SUMMARY}### Modified: $FILE\n\n"
                SUMMARY="${SUMMARY}`diff\n$(git diff --unified=3 $START_COMMIT $END_COMMIT -- $FILE)\n`\n\n"
                ;;
              D)
                SUMMARY="${SUMMARY}### Deleted: $FILE\n\n"
                # For deleted files, show the entire file content before deletion.
                SUMMARY="${SUMMARY}`diff\n$(git show $START_COMMIT:$FILE)\n`\n\n"
                ;;
              *)
                SUMMARY="${SUMMARY}### Other Change ($STATUS): $FILE\n\n"
                SUMMARY="${SUMMARY}`diff\n$(git diff --unified=3 $START_COMMIT $END_COMMIT -- $FILE)\n`\n\n"
                ;;
            esac
          done <<< "$CHANGED_FILES"

          echo "::notice::$SUMMARY" # Print to log
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: Use the summary (Example)
        if: ${{ always() }} # This step will always run for demonstration
        run: |
          echo "The generated summary is:"
          echo "${{ steps.generate_summary_bash.outputs.summary }}"